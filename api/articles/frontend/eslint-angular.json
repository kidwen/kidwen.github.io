{"title":"eslint angular","uid":"f47c8ac6f30df916a8383883258747a7","slug":"frontend/eslint-angular","date":"2023-04-01T00:00:00.000Z","updated":"2023-08-04T05:37:45.936Z","comments":true,"path":"api/articles/frontend/eslint-angular.json","keywords":null,"cover":"/images/eslint-angular.jpeg","content":"<p>Angular 是一个应用设计框架与开发平台，旨在创建高效而精致的单页面应用。<br>ESLint 是一个很棒的 JavaScript 代码检查工具。<br>TypeScript 是一种基于 JavaScript 的强类型编程语言。</p>\n<h2 id=\"在angular项目中添加eslint\"><a href=\"#在angular项目中添加eslint\" class=\"headerlink\" title=\"在angular项目中添加eslint\"></a>在<code>angular</code>项目中添加<code>eslint</code></h2><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>此命令会默认安装<code>angular-eslint</code>相关依赖,包括<code>@angular-eslint/builder</code>,<code>@angular-eslint/eslint-plugin</code>,<code>@angular-eslint/eslint-plugin-template</code>,<code>@angular-eslint/schematics</code>,<code>@angular-eslint/template-parser</code>,<code>@typescript-eslint/eslint-plugin</code>,<code>@typescript-eslint/parser</code>,并在<code>angular.json</code>文件中自动添加如下配置（如果没有则手动添加）。</p></blockquote>\n<pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &#x2F;&#x2F; ...\n    &quot;cli&quot;: &#123;\n        &#x2F;&#x2F; ...\n        &quot;schematicCollections&quot;: [&quot;@angular-eslint&#x2F;schematics&quot;]\n    &#125;\n&#125;</code></pre>\n\n<pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">ng add @angular-eslint&#x2F;schematics</code></pre>\n\n<h3 id=\"安装eslint插件\"><a href=\"#安装eslint插件\" class=\"headerlink\" title=\"安装eslint插件\"></a>安装eslint插件</h3><pre class=\"line-numbers language-bash\" data-language=\"bash\"><code class=\"language-bash\">npm install eslint-plugin-import eslint-plugin-jsdoc eslint-plugin-prefer-arrow eslint-plugin-unicorn --save-dev</code></pre>\n\n<h3 id=\"配置eslint插件\"><a href=\"#配置eslint插件\" class=\"headerlink\" title=\"配置eslint插件\"></a>配置eslint插件</h3><blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>插件用于加载第三方规则集合，在 plugins 属性中，可以定义一个数组，数组中的每个元素都是一个字符串，代表要使用的插件的名称。一旦配置中定义了插件，可以在 rules 属性中使用插件的规则。插件的规则名称由插件名称和规则名称组成，中间使用 &#x2F; 分隔。</p></blockquote>\n<pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; .eslintrc.js\nmodule.exports &#x3D; &#123;\n    &#x2F;&#x2F; ...\n    &quot;plugins&quot;: [\n        &quot;import&quot;,\n        &quot;jsdoc&quot;,\n        &quot;unicorn&quot;,\n        &quot;prefer-arrow&quot;,\n    ],\n    &#x2F;&#x2F; ...\n&#125;</code></pre>\n\n<h3 id=\"配置lint规则\"><a href=\"#配置lint规则\" class=\"headerlink\" title=\"配置lint规则\"></a>配置lint规则</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; .eslintrc.js\nmodule.exports &#x3D; &#123;\n    &#x2F;&#x2F; ...\n    &quot;rules&quot;:  &#123;\n        &quot;import&#x2F;no-default-export&quot;: &quot;error&quot;,\n        &#x2F;&#x2F; ...\n    &#125;,\n    &#x2F;&#x2F; ...\n&#125;</code></pre>\n\n<h3 id=\"基于不同文件类型覆盖规则\"><a href=\"#基于不同文件类型覆盖规则\" class=\"headerlink\" title=\"基于不同文件类型覆盖规则\"></a>基于不同文件类型覆盖规则</h3><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\">&#x2F;&#x2F; .eslintrc.js\nmodule.exports &#x3D; &#123;\n    &#x2F;&#x2F; ...\n    &quot;overrides&quot;: [\n        &#123;\n            &quot;files&quot;: [\n                &quot;*.component.ts&quot;\n            ],\n            &quot;plugins&quot;: [\n                &quot;@angular-eslint&#x2F;eslint-plugin-template&quot;,\n                &quot;@angular-eslint&quot;,\n            ],\n            &quot;rules&quot;: &#123;\n                &quot;@angular-eslint&#x2F;no-empty-lifecycle-method&quot;: &quot;error&quot;,\n                &#x2F;&#x2F; ...\n            &#125;\n        &#125;,\n    ]\n&#125;</code></pre>\n\n<h2 id=\"规则介绍\"><a href=\"#规则介绍\" class=\"headerlink\" title=\"规则介绍\"></a>规则介绍</h2><h3 id=\"typescript-eslint\"><a href=\"#typescript-eslint\" class=\"headerlink\" title=\"@typescript-eslint\"></a>@typescript-eslint</h3><h4 id=\"array-type\"><a href=\"#array-type\" class=\"headerlink\" title=\"array-type\"></a>array-type</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/array-type\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>配置数组声明方式,<code>error</code>代表使用<code>T[]</code></li>\n</ul>\n</li>\n<li><p>类型</p>\n<ul>\n<li>‘error’|Array</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-TypeScript\" data-language=\"TypeScript\"><code class=\"language-TypeScript\">&#123;\n    default?: &quot;array&quot; | &quot;generic&quot; | &quot;array-simple&quot;;\n    readonly?: &quot;array&quot; | &quot;generic&quot; | &quot;array-simple&quot;;\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;array-type&quot;: [\n        &quot;error&quot;,\n        &#123;\n            &quot;default&quot;: &quot;generic&quot;\n        &#125;\n    ],\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"ban-ts-comment\"><a href=\"#ban-ts-comment\" class=\"headerlink\" title=\"ban-ts-comment\"></a>ban-ts-comment</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/ban-ts-comment\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止<code>@ts-&lt;directive&gt;</code>注释或要求指令后的描述</li>\n<li>默认只允许<code>@ts-check</code></li>\n<li><code>allow-with-description</code>允许带描述的注释指令</li>\n</ul>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">&#x2F;&#x2F; @ts-expect-error: description</code></pre>\n\n<ul>\n<li><code>descriptionFormat</code>正则匹配指令注释后的描述,不匹配则报错</li>\n<li><code>minimumDescriptionLength</code>指令注释后的描述最短长度</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">type DirectiveConfigSchema &#x3D;\n    | boolean\n    | &quot;allow-with-description&quot;\n    | &#123;\n        descriptionFormat?: string;\n        &#125;;\n\ninterface Options &#123;\n    &quot;ts-expect-error&quot;?: DirectiveConfigSchema;\n    &quot;ts-ignore&quot;?: DirectiveConfigSchema;\n    &quot;ts-nocheck&quot;?: DirectiveConfigSchema;\n    &quot;ts-check&quot;?: DirectiveConfigSchema;\n    minimumDescriptionLength?: number;\n&#125;\n\nconst defaultOptions: Options &#x3D; [\n    &#123;\n        &quot;ts-expect-error&quot;: &quot;allow-with-description&quot;,\n        &quot;ts-ignore&quot;: true,\n        &quot;ts-nocheck&quot;: true,\n        &quot;ts-check&quot;: false,\n        minimumDescriptionLength: 3,\n    &#125;,\n];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;ban-ts-comment&quot;: [\n        &quot;error&quot;,\n        &#123;\n            &quot;ts-expect-error&quot;: &quot;allow-with-description&quot;,\n            &quot;ts-ignore&quot;: true,\n            &quot;ts-nocheck&quot;: true,\n            &quot;ts-check&quot;: false,\n            &quot;minimumDescriptionLength&quot;: 3\n        &#125;\n    ],\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"ban-types\"><a href=\"#ban-types\" class=\"headerlink\" title=\"ban-types\"></a>ban-types</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/ban-types\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li><p>使用小写类型以保持一致性</p>\n</li>\n<li><p>使用正确的函数类型</p>\n</li>\n<li><p>使用安全的object类型</p>\n<table>\n<thead>\n<tr>\n<th>❌</th>\n<th>✅</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>String</td>\n<td>string</td>\n</tr>\n<tr>\n<td>Boolean</td>\n<td>boolean</td>\n</tr>\n<tr>\n<td>Number</td>\n<td>number</td>\n</tr>\n<tr>\n<td>Symbol</td>\n<td>symbol</td>\n</tr>\n<tr>\n<td>BigInt</td>\n<td>bigint</td>\n</tr>\n<tr>\n<td>Function</td>\n<td>() &#x3D;&gt; {}</td>\n</tr>\n<tr>\n<td>Object</td>\n<td>object | 特定类型</td>\n</tr>\n<tr>\n<td>{}</td>\n<td>特定类型</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\ntypes?: &#123;\n    [k: string]:\n    | null\n    | boolean\n    | string\n    | &#123;\n        message?: string;\n        fixWith?: string;\n        suggest?: string[];\n        &#125;;\n&#125;;\nextendDefaults?: boolean;\n&#125;\n\nconst defaultOptions: Options &#x3D; [&#123;&#125;];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;ban-types&quot;: &quot;error&quot;\n&#125;\n&#x2F;&#x2F; 或者\n&#123;\n    &quot;@typescript-eslint&#x2F;ban-types&quot;: [\n        &quot;error&quot;,\n        &#123;\n        &quot;types&quot;: &#123;\n            &#x2F;&#x2F; 自定义消息描述为什么不能使用此类型\n            &quot;Foo&quot;: &quot;Don&#39;t use Foo because it is unsafe&quot;,\n\n            &#x2F;&#x2F; 添加一个自定义消息，并告知插件如何修复这个问题\n            &quot;OldAPI&quot;: &#123;\n            &quot;message&quot;: &quot;Use NewAPI instead&quot;,\n            &quot;fixWith&quot;: &quot;NewAPI&quot;\n            &#125;,\n\n            &#x2F;&#x2F; 取消默认禁用的类型\n            &quot;&#123;&#125;&quot;: false\n        &#125;,\n        &quot;extendDefaults&quot;: true\n        &#125;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"consistent-type-definitions\"><a href=\"#consistent-type-definitions\" class=\"headerlink\" title=\"consistent-type-definitions\"></a>consistent-type-definitions</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/consistent-type-definitions\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>强制使用<code>interface</code>或者<code>type</code>来声明类型</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">type Options &#x3D; &quot;interface&quot; | &quot;type&quot;;\n\nconst defaultOptions: Options &#x3D; [&quot;interface&quot;];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n   &quot;@typescript-eslint&#x2F;consistent-type-definitions&quot;: [&quot;error&quot;, &quot;interface&quot;],\n   &#x2F;&#x2F; 或者\n   &quot;@typescript-eslint&#x2F;consistent-type-definitions&quot;: [&quot;error&quot;, &quot;type&quot;]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"dot-notation\"><a href=\"#dot-notation\" class=\"headerlink\" title=\"dot-notation\"></a>dot-notation</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/dot-notation\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li><p>尽可能强制执行点表示法</p>\n<table>\n<thead>\n<tr>\n<th>❌</th>\n<th>✅</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>obj[“property”]</td>\n<td>obj.property</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options extends BaseDotNotationOptions &#123;\n    allowPrivateClassPropertyAccess?: boolean;\n    allowProtectedClassPropertyAccess?: boolean;\n    allowIndexSignaturePropertyAccess?: boolean;\n&#125;\n\nconst defaultOptions: Options &#x3D; &#123;\n    ...baseDotNotationDefaultOptions,\n    allowPrivateClassPropertyAccess: false,\n    allowProtectedClassPropertyAccess: false,\n    allowIndexSignaturePropertyAccess: false,\n&#125;;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &#x2F;&#x2F; 必须禁用基础规则\n    &quot;dot-notation&quot;: &quot;off&quot;,\n    &quot;@typescript-eslint&#x2F;dot-notation&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"explicit-member-accessibility\"><a href=\"#explicit-member-accessibility\" class=\"headerlink\" title=\"explicit-member-accessibility\"></a>explicit-member-accessibility</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/explicit-member-accessibility\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>需要对类属性和方法进行显式可访问性修饰符。<code>public</code>, <code>protected</code>, <code>private</code></li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">type AccessibilityLevel &#x3D; &quot;explicit&quot; | &quot;no-public&quot; | &quot;off&quot;;\n\ninterface Options &#123;\n    accessibility?: AccessibilityLevel;\n    overrides?: &#123;\n        accessors?: AccessibilityLevel;\n        constructors?: AccessibilityLevel;\n        methods?: AccessibilityLevel;\n        properties?: AccessibilityLevel;\n        parameterProperties?: AccessibilityLevel;\n    &#125;;\n    ignoredMethodNames?: string[];\n&#125;\n\nconst defaultOptions: Options &#x3D; [&#123; accessibility: &quot;explicit&quot; &#125;];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;explicit-member-accessibility&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-empty-function\"><a href=\"#no-empty-function\" class=\"headerlink\" title=\"no-empty-function\"></a>no-empty-function</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-empty-function\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>不允许空方法</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">\ntype AllowOptionEntries &#x3D;\n    | &#39;functions&#39;\n    | &#39;arrowFunctions&#39;\n    | &#39;generatorFunctions&#39;\n    | &#39;methods&#39;\n    | &#39;generatorMethods&#39;\n    | &#39;getters&#39;\n    | &#39;setters&#39;\n    | &#39;constructors&#39;\n    | &#39;private-constructors&#39;\n    | &#39;protected-constructors&#39;\n    | &#39;asyncFunctions&#39;\n    | &#39;asyncMethods&#39;\n    | &#39;decoratedFunctions&#39;\n    | &#39;overrideMethods&#39;;\n\ninterface Options extends BaseNoEmptyFunctionOptions &#123;\n    allow?: Array&lt;AllowOptionEntries&gt;;\n&#125;\nconst defaultOptions: Options &#x3D; &#123;\n    ...baseNoEmptyFunctionDefaultOptions,\n    allow: [],\n&#125;;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &#x2F;&#x2F; 必须禁用基础规则\n    &quot;no-empty-function&quot;: &quot;off&quot;,\n    &quot;@typescript-eslint&#x2F;no-empty-function&quot;: [\n        &quot;error&quot;,\n        &#123;\n            &quot;allow&quot;: [&quot;decoratedFunctions&quot;]\n        &#125;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-for-in-array\"><a href=\"#no-for-in-array\" class=\"headerlink\" title=\"no-for-in-array\"></a>no-for-in-array</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-for-in-array\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止使用 for-in 循环迭代数组。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-for-in-array&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-inferrable-types\"><a href=\"#no-inferrable-types\" class=\"headerlink\" title=\"no-inferrable-types\"></a>no-inferrable-types</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-inferrable-types\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li><p>不允许对初始化为数字、字符串或布尔值的变量或参数进行显式类型声明。</p>\n<table>\n<thead>\n<tr>\n<th>❌</th>\n<th>✅</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>const a: bigint &#x3D; 10n;</td>\n<td>const a &#x3D; 10n;</td>\n</tr>\n<tr>\n<td>const a: bigint &#x3D; BigInt(10);</td>\n<td>const a &#x3D; BigInt(10);</td>\n</tr>\n<tr>\n<td>const a: boolean &#x3D; !0;</td>\n<td>const a &#x3D; !0;</td>\n</tr>\n<tr>\n<td>const a: boolean &#x3D; Boolean(null);</td>\n<td>const a &#x3D; Boolean(null);</td>\n</tr>\n<tr>\n<td>const a: boolean &#x3D; true;</td>\n<td>const a &#x3D; true;</td>\n</tr>\n<tr>\n<td>const a: null &#x3D; null;</td>\n<td>const a &#x3D; null;</td>\n</tr>\n<tr>\n<td>const a: number &#x3D; 10;</td>\n<td>const a &#x3D; 10;</td>\n</tr>\n<tr>\n<td>const a: number &#x3D; Infinity;</td>\n<td>const a &#x3D; Infinity;</td>\n</tr>\n<tr>\n<td>const a: number &#x3D; NaN;</td>\n<td>const a &#x3D; NaN;</td>\n</tr>\n<tr>\n<td>const a: number &#x3D; Number(‘1’);</td>\n<td>const a &#x3D; Number(‘1’);</td>\n</tr>\n<tr>\n<td>const a: RegExp &#x3D; &#x2F;a&#x2F;;</td>\n<td>const a &#x3D; &#x2F;a&#x2F;;</td>\n</tr>\n<tr>\n<td>const a: RegExp &#x3D; new RegExp(‘a’);</td>\n<td>const a &#x3D; new RegExp(‘a’);</td>\n</tr>\n<tr>\n<td>const a: string &#x3D; <code>str</code>;</td>\n<td>const a &#x3D; <code>str</code>;</td>\n</tr>\n<tr>\n<td>const a: string &#x3D; String(1);</td>\n<td>const a &#x3D; String(1);</td>\n</tr>\n<tr>\n<td>const a: symbol &#x3D; Symbol(‘a’);</td>\n<td>const a &#x3D; Symbol(‘a’);</td>\n</tr>\n<tr>\n<td>const a: undefined &#x3D; undefined;</td>\n<td>const a &#x3D; undefined;</td>\n</tr>\n<tr>\n<td>const a: undefined &#x3D; void someValue;</td>\n<td>const a &#x3D; void someValue;</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    ignoreParameters?: boolean;\n    ignoreProperties?: boolean;\n&#125;\n\nconst defaultOptions: Options &#x3D; [\n    &#123; ignoreParameters: false, ignoreProperties: false &#125;,\n];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-inferrable-types&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-non-null-assertion\"><a href=\"#no-non-null-assertion\" class=\"headerlink\" title=\"no-non-null-assertion\"></a>no-non-null-assertion</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-non-null-assertion\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止使用 <code>!</code> 进行非空断言后缀运算符。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-non-null-assertion&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-require-imports\"><a href=\"#no-require-imports\" class=\"headerlink\" title=\"no-require-imports\"></a>no-require-imports</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-require-imports\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止调用 <code>require()</code></li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-require-imports&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-this-alias\"><a href=\"#no-this-alias\" class=\"headerlink\" title=\"no-this-alias\"></a>no-this-alias</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-this-alias\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止使用 <code>this</code> 别名</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n    * 是否忽略解构, 例如 &#96;const &#123; props, state &#125; &#x3D; this&#96;.\n    *&#x2F;\n    allowDestructuring?: boolean;\n    &#x2F;**\n    * 忽略的名称, 例如 [&quot;self&quot;] for &#96;const self &#x3D; this;&#96;.\n    *&#x2F;\n    allowedNames?: string[];\n&#125;\n\nconst defaultOptions: Options &#x3D; [\n    &#123; allowDestructuring: true, allowedNames: [] &#125;,\n];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-this-alias&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-unnecessary-type-assertion\"><a href=\"#no-unnecessary-type-assertion\" class=\"headerlink\" title=\"no-unnecessary-type-assertion\"></a>no-unnecessary-type-assertion</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-unnecessary-type-assertion\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止不更改表达式类型的类型断言。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n     * 忽略的类型名称列表。\n    *&#x2F;\n    typesToIgnore?: string[];\n&#125;\n\nconst defaultOptions: Options &#x3D; [&#123;&#125;];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-unnecessary-type-assertion&quot;: [&quot;error&quot;, &#123; &quot;typesToIgnore&quot;: [&quot;Foo&quot;] &#125;]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-var-requires\"><a href=\"#no-var-requires\" class=\"headerlink\" title=\"no-var-requires\"></a>no-var-requires</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-var-requires\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li><p>不允许 <code>require</code> 语句（导入语句中除外）</p>\n<table>\n<thead>\n<tr>\n<th>❌</th>\n<th>✅</th>\n</tr>\n</thead>\n<tbody><tr>\n<td>var foo &#x3D; require(‘foo’);</td>\n<td>import foo &#x3D; require(‘foo’);</td>\n</tr>\n<tr>\n<td>const foo &#x3D; require(‘foo’);</td>\n<td>require(‘foo’);</td>\n</tr>\n<tr>\n<td>let foo &#x3D; require(‘foo’);</td>\n<td>import foo from ‘foo’;</td>\n</tr>\n</tbody></table>\n</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">&#123;\n    &quot;@typescript-eslint&#x2F;no-var-requires&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"prefer-for-of\"><a href=\"#prefer-for-of\" class=\"headerlink\" title=\"prefer-for-of\"></a>prefer-for-of</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/prefer-for-of\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>尽可能强制使用 for-of 循​​环而不是标准 for 循环。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;prefer-for-of&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"prefer-readonly\"><a href=\"#prefer-readonly\" class=\"headerlink\" title=\"prefer-readonly\"></a>prefer-readonly</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/prefer-readonly\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>如果私有成员从未在构造函数外部修改过，则要求将其标记为只读</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;&#x2F; 用于限制仅检查立即分配 &#96;lambda&#96; 值的成员。\n    onlyInlineLambdas?: boolean;\n&#125;\n\nconst defaultOptions: Options &#x3D; [&#123; onlyInlineLambdas: false &#125;];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;prefer-readonly&quot;: [&quot;error&quot;, &#123; &quot;onlyInlineLambdas&quot;: true &#125;]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"strict-boolean-expressions\"><a href=\"#strict-boolean-expressions\" class=\"headerlink\" title=\"strict-boolean-expressions\"></a>strict-boolean-expressions</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/strict-boolean-expressions\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止布尔表达式中的某些类型。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    allowString?: boolean;\n    allowNumber?: boolean;\n    allowNullableObject?: boolean;\n    allowNullableBoolean?: boolean;\n    allowNullableString?: boolean;\n    allowNullableNumber?: boolean;\n    allowNullableEnum?: boolean;\n    allowAny?: boolean;\n    allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing?: boolean;\n&#125;\n\nconst defaultOptions: Options &#x3D; [\n    &#123;\n        allowString: true,\n        allowNumber: true,\n        allowNullableObject: true,\n        allowNullableBoolean: false,\n        allowNullableString: false,\n        allowNullableNumber: false,\n        allowNullableEnum: true,\n        allowAny: false,\n        allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing: false,\n    &#125;,\n];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;strict-boolean-expressions&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"await-thenable\"><a href=\"#await-thenable\" class=\"headerlink\" title=\"await-thenable\"></a>await-thenable</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/await-thenable\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止 <code>await</code> 不是 <code>Thenable</code> 的值。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;await-thenable&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-unnecessary-boolean-literal-compare\"><a href=\"#no-unnecessary-boolean-literal-compare\" class=\"headerlink\" title=\"no-unnecessary-boolean-literal-compare\"></a>no-unnecessary-boolean-literal-compare</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-unnecessary-boolean-literal-compare\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止与布尔文字进行不必要的相等比较。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n    * 是否允许可空布尔变量和“true”之间的比较。\n    *&#x2F;\n    allowComparingNullableBooleansToTrue?: boolean;\n    &#x2F;**\n    * 是否允许可为 null 的布尔变量和“false”之间进行比较。\n    *&#x2F;\n    allowComparingNullableBooleansToFalse?: boolean;\n&#125;\n\nconst defaultOptions: Options &#x3D; [\n    &#123;\n        allowComparingNullableBooleansToTrue: true,\n        allowComparingNullableBooleansToFalse: true,\n    &#125;,\n];</code></pre></li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-unnecessary-boolean-literal-compare&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-unnecessary-qualifier\"><a href=\"#no-unnecessary-qualifier\" class=\"headerlink\" title=\"no-unnecessary-qualifier\"></a>no-unnecessary-qualifier</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-unnecessary-qualifier\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止不必要的命名空间限定符。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-unnecessary-qualifier&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-unnecessary-type-arguments\"><a href=\"#no-unnecessary-type-arguments\" class=\"headerlink\" title=\"no-unnecessary-type-arguments\"></a>no-unnecessary-type-arguments</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-unnecessary-type-arguments\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>不允许类型参数等于默认值。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-unnecessary-type-arguments&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"promise-function-async\"><a href=\"#promise-function-async\" class=\"headerlink\" title=\"promise-function-async\"></a>promise-function-async</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/promise-function-async\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>要求任何返回 Promise 的函数或方法被标记为异步。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n    * 是否将“any”和“unknown”视为 Promise。\n    *&#x2F;\n    allowAny?: boolean;\n    &#x2F;**\n    * 任何额外的类或接口名称都被视为 Promise。\n    *&#x2F;\n    allowedPromiseNames?: string[];\n    checkArrowFunctions?: boolean;\n    checkFunctionDeclarations?: boolean;\n    checkFunctionExpressions?: boolean;\n    checkMethodDeclarations?: boolean;\n&#125;\n\nconst defaultOptions: Options &#x3D; [\n    &#123;\n        allowAny: true,\n        allowedPromiseNames: [],\n        checkArrowFunctions: true,\n        checkFunctionDeclarations: true,\n        checkFunctionExpressions: true,\n        checkMethodDeclarations: true,\n    &#125;,\n];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;promise-function-async&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"restrict-plus-operands\"><a href=\"#restrict-plus-operands\" class=\"headerlink\" title=\"restrict-plus-operands\"></a>restrict-plus-operands</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/restrict-plus-operands\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>要求加法的两个操作数类型相同，并且为 <code>bigint</code> <code>number</code> 或 <code>string</code>。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n    * 是否允许&#96;any&#96;类型值。\n\n    *&#x2F;\n    allowAny?: boolean;\n    &#x2F;**\n    * 是否允许&#96;boolean&#96;类型值。\n    *&#x2F;\n    allowBoolean?: boolean;\n    &#x2F;**\n    * 是否允许 &#96;null&#96; 或者 &#96;undefined&#96; 类型值.\n    *&#x2F;\n    allowNullish?: boolean;\n    &#x2F;**\n    * 是否允许 &#96;bigint&#96;&#x2F;&#96;number&#96; 类型值和 &#96;string&#96; 类型值相加。\n    *&#x2F;\n    allowNumberAndString?: boolean;\n    &#x2F;**\n    * 是否允许 &#96;regexp&#96; 类型值。\n    *&#x2F;\n    allowRegExp?: boolean;\n    &#x2F;**\n    * 是否检查复合赋值，例如&#96;+&#x3D;&#96;。\n    *&#x2F;\n    checkCompoundAssignments?: boolean;\n&#125;\n\nconst defaultOptions: Options &#x3D; [&#123; checkCompoundAssignments: false &#125;];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;restrict-plus-operands&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"unbound-method\"><a href=\"#unbound-method\" class=\"headerlink\" title=\"unbound-method\"></a>unbound-method</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/unbound-method\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>强制以预期范围调用未绑定方法。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n    * 是否跳过检查“静态”方法是否正确绑定。\n    *&#x2F;\n    ignoreStatic?: boolean;\n&#125;\n\nconst defaultOptions: Options &#x3D; [&#123; ignoreStatic: false &#125;];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;unbound-method&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-unused-vars\"><a href=\"#no-unused-vars\" class=\"headerlink\" title=\"no-unused-vars\"></a>no-unused-vars</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-unused-vars\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止使用未使用的变量。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &#x2F;&#x2F; 必须禁用基础规则\n    &quot;no-unused-vars&quot;: &quot;off&quot;,\n    &quot;@typescript-eslint&#x2F;no-unused-vars&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-explicit-any\"><a href=\"#no-explicit-any\" class=\"headerlink\" title=\"no-explicit-any\"></a>no-explicit-any</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-explicit-any\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁用 <code>any</code> 类型</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n    * 是否启用自动修复，将&#96;any&#96;类型转换为&#96;unknown&#96;类型。\n    *&#x2F;\n    fixToUnknown?: boolean;\n    &#x2F;**\n    * 是否忽略其余参数数组。\n    *&#x2F;\n    ignoreRestArgs?: boolean;\n&#125;\n\nconst defaultOptions: Options &#x3D; [\n    &#123; fixToUnknown: false, ignoreRestArgs: false &#125;,\n];</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-explicit-any&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-unsafe-argument\"><a href=\"#no-unsafe-argument\" class=\"headerlink\" title=\"no-unsafe-argument\"></a>no-unsafe-argument</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-unsafe-argument\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止使用<code>any</code>类型的值调用函数。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-unsafe-argument&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-unsafe-assignment\"><a href=\"#no-unsafe-assignment\" class=\"headerlink\" title=\"no-unsafe-assignment\"></a>no-unsafe-assignment</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-unsafe-assignment\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止将任何类型的值分配给变量和属性。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-unsafe-assignment&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-unsafe-call\"><a href=\"#no-unsafe-call\" class=\"headerlink\" title=\"no-unsafe-call\"></a>no-unsafe-call</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-unsafe-call\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止调用<code>any</code>类型的值。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-unsafe-call&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-unsafe-member-access\"><a href=\"#no-unsafe-member-access\" class=\"headerlink\" title=\"no-unsafe-member-access\"></a>no-unsafe-member-access</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-unsafe-member-access\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止成员访问<code>any</code>类型的值。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-unsafe-member-access&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-unsafe-return\"><a href=\"#no-unsafe-return\" class=\"headerlink\" title=\"no-unsafe-return\"></a>no-unsafe-return</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-unsafe-return\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止从函数返回<code>any</code>类型的值。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-unsafe-return&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-useless-empty-export\"><a href=\"#no-useless-empty-export\" class=\"headerlink\" title=\"no-useless-empty-export\"></a>no-useless-empty-export</h4><ul>\n<li><p><a href=\"https://typescript-eslint.io/rules/no-useless-empty-export\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止不更改模块文件中任何内容的空导出。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@typescript-eslint&#x2F;no-useless-empty-export&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h3 id=\"angular-eslint-eslint-plugin\"><a href=\"#angular-eslint-eslint-plugin\" class=\"headerlink\" title=\"@angular-eslint&#x2F;eslint-plugin\"></a>@angular-eslint&#x2F;eslint-plugin</h3><h4 id=\"no-empty-lifecycle-method\"><a href=\"#no-empty-lifecycle-method\" class=\"headerlink\" title=\"no-empty-lifecycle-method\"></a>no-empty-lifecycle-method</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-empty-lifecycle-method.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止声明空生命周期方法</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;no-empty-lifecycle-method&quot;: [&quot;error&quot;]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"sort-ngmodule-metadata-arrays\"><a href=\"#sort-ngmodule-metadata-arrays\" class=\"headerlink\" title=\"sort-ngmodule-metadata-arrays\"></a>sort-ngmodule-metadata-arrays</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/sort-ngmodule-metadata-arrays.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>强制<code>NgModule</code>元数据按<code>ASC</code>字母顺序排序。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;&#x2F; &#96;BCP&#96; 47 种语言标签。默认值：&#96;en-US&#96;。\n    locale?: string;\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;sort-ngmodule-metadata-arrays&quot;: [&quot;error&quot;]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"component-class-suffix\"><a href=\"#component-class-suffix\" class=\"headerlink\" title=\"component-class-suffix\"></a>component-class-suffix</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/component-class-suffix.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li><code>@Component</code> 修饰的 <code>class</code> 必须以 <code>Component</code>(或自定义) 结尾。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n     * 默认值: &#96;[&quot;Component&quot;]&#96;\n    *&#x2F;\n    suffixes?: string[];\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;component-class-suffix&quot;: [&quot;error&quot;]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"directive-class-suffix\"><a href=\"#directive-class-suffix\" class=\"headerlink\" title=\"directive-class-suffix\"></a>directive-class-suffix</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/directive-class-suffix.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li><code>@Directive</code> 修饰的 <code>class</code> 必须以 <code>Directive</code>(或自定义) 结尾。</li>\n</ul>\n</li>\n<li><p>选项</p>\n   <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n     * 默认值: &#96;[&quot;Component&quot;]&#96;\n    *&#x2F;\n    suffixes?: string[];\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;directive-class-suffix&quot;: [&quot;error&quot;]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"component-selector\"><a href=\"#component-selector\" class=\"headerlink\" title=\"component-selector\"></a>component-selector</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/component-selector.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>组件选择器必须遵循指定的命名规则。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    type?: string | (&quot;element&quot; | &quot;attribute&quot;)[];\n    prefix?: string | unknown[];\n    style?: &quot;camelCase&quot; | &quot;kebab-case&quot;;\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;component-selector&quot;: [\n        &quot;error&quot;,\n        &#123;\n            &quot;type&quot;: &quot;element&quot;,\n            &quot;prefix&quot;: &quot;sg&quot;,\n            &quot;style&quot;: &quot;kebab-case&quot;\n        &#125;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"use-injectable-provided-in\"><a href=\"#use-injectable-provided-in\" class=\"headerlink\" title=\"use-injectable-provided-in\"></a>use-injectable-provided-in</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-injectable-provided-in.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>使用 <code>providedIn</code> 使 <code>Injectables</code> 可以 <code>tree-shakable</code>。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;&#x2F; 忽略的class名的正则表达式\n    ignoreClassNamePattern?: string;\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;use-injectable-provided-in&quot;: [\n        &quot;error&quot;,\n        &#123;\n            &quot;ignoreClassNamePattern&quot;: &quot;&#x2F;Effects$&#x2F;&quot;\n        &#125;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"contextual-decorator\"><a href=\"#contextual-decorator\" class=\"headerlink\" title=\"contextual-decorator\"></a>contextual-decorator</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/contextual-decorator.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保类在其主体中正确使用上下文装饰器。</li>\n</ul>\n</li>\n<li><p>选项</p>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;contextual-decorator&quot;: [&quot;error&quot;]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"directive-selector\"><a href=\"#directive-selector\" class=\"headerlink\" title=\"directive-selector\"></a>directive-selector</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/directive-selector.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>指令选择器命名必须遵循指定的规则</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    type?: string | (&quot;element&quot; | &quot;attribute&quot;)[];\n    prefix?: string | unknown[];\n    style?: &quot;camelCase&quot; | &quot;kebab-case&quot;;\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;directive-selector&quot;: [\n        &quot;error&quot;,\n        &#123;\n            &quot;type&quot;: &quot;element&quot;,\n            &quot;prefix&quot;: &quot;app&quot;,\n            &quot;style&quot;: &quot;kebab-case&quot;\n        &#125;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-attribute-decorator\"><a href=\"#no-attribute-decorator\" class=\"headerlink\" title=\"no-attribute-decorator\"></a>no-attribute-decorator</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-attribute-decorator.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>@Attribute 装饰器用于获取属性的单个值。与获取值流（使用 @Input）相比，这是一个不太常见的用例，因此当 @Input 是预期的用途时，经常会错误地使用 @Attribute 装饰器。该规则完全禁止使用 @Attribute 装饰器，以防止这些错误。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n<pre><code>  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;no-attribute-decorator&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre>\n</code></pre>\n</li>\n</ul>\n<h4 id=\"no-output-on-prefix\"><a href=\"#no-output-on-prefix\" class=\"headerlink\" title=\"no-output-on-prefix\"></a>no-output-on-prefix</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-output-on-prefix.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保输出绑定（包括别名）不被命名为<code>on</code>，也不以其为前缀。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;no-output-on-prefix&quot;: [\n       &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-pipe-impure\"><a href=\"#no-pipe-impure\" class=\"headerlink\" title=\"no-pipe-impure\"></a>no-pipe-impure</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-pipe-impure.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>不允许声明<code>impure</code>管道</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;no-pipe-impure&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-queries-metadata-property\"><a href=\"#no-queries-metadata-property\" class=\"headerlink\" title=\"no-queries-metadata-property\"></a>no-queries-metadata-property</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-queries-metadata-property.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止在组件或指令中使用<code>queries</code>元数据属性。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;no-queries-metadata-property&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-lifecycle-call\"><a href=\"#no-lifecycle-call\" class=\"headerlink\" title=\"no-lifecycle-call\"></a>no-lifecycle-call</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-lifecycle-call.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止显式调用生命周期方法</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;no-lifecycle-call&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"component-max-inline-declarations\"><a href=\"#component-max-inline-declarations\" class=\"headerlink\" title=\"component-max-inline-declarations\"></a>component-max-inline-declarations</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/component-max-inline-declarations.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>强制内联模板、样式和动画中的最大行数。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n    * 默认: &#96;3&#96;\n    *&#x2F;\n    template?: number;\n    &#x2F;**\n    * 默认: &#96;3&#96;\n    *&#x2F;\n    styles?: number;\n    &#x2F;**\n    * 默认: &#96;15&#96;\n    *&#x2F;\n    animations?: number;\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;component-max-inline-declarations&quot;: [\n        &quot;error&quot;,\n        &#123;\n            &quot;template&quot;: 3,\n            &quot;styles&quot;: 3,\n            &quot;animations&quot;: 15\n        &#125;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-forward-ref\"><a href=\"#no-forward-ref\" class=\"headerlink\" title=\"no-forward-ref\"></a>no-forward-ref</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-forward-ref.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>禁止使用 <code>DI</code> 的 <code>forwardRef</code> 引用</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;no-forward-ref&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-input-prefix\"><a href=\"#no-input-prefix\" class=\"headerlink\" title=\"no-input-prefix\"></a>no-input-prefix</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-input-prefix.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保输入绑定（包括别名）不会以配置的不允许的前缀命名或添加前缀</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n    * 默认: &#96;[]&#96;\n    *&#x2F;\n    prefixes?: string[];\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;no-input-prefix&quot;: [\n        &quot;error&quot;,\n        &#123;\n            &quot;prefixes&quot;: [\n                &quot;on&quot;\n            ]\n        &#125;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"pipe-prefix\"><a href=\"#pipe-prefix\" class=\"headerlink\" title=\"pipe-prefix\"></a>pipe-prefix</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/pipe-prefix.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>强制管道前缀一致。</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n    * 默认: &#96;[]&#96;\n    *&#x2F;\n    prefixes?: string[];\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;pipe-prefix&quot;: [\n        &quot;error&quot;,\n        &#123;\n            &quot;prefixes&quot;: [\n                &quot;ng&quot;\n            ]\n        &#125;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"no-output-native\"><a href=\"#no-output-native\" class=\"headerlink\" title=\"no-output-native\"></a>no-output-native</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/no-output-native.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保输出绑定（包括别名）不被命名为标准 DOM 事件</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;no-output-native&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"prefer-output-readonly\"><a href=\"#prefer-output-readonly\" class=\"headerlink\" title=\"prefer-output-readonly\"></a>prefer-output-readonly</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-output-readonly.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>最好将 <code>@Output</code> 声明为只读，因为它们不应该被重新分配</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;prefer-output-readonly&quot;: &quot;error&quot;\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"relative-url-prefix\"><a href=\"#relative-url-prefix\" class=\"headerlink\" title=\"relative-url-prefix\"></a>relative-url-prefix</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/relative-url-prefix.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li><code>./</code> 和 <code>../</code> 前缀是相对 <code>URL</code> 的标准语法；不要依赖 Angular 当前的能力来处理没有该前缀的情况。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;relative-url-prefix&quot;: [\n       &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"use-component-selector\"><a href=\"#use-component-selector\" class=\"headerlink\" title=\"use-component-selector\"></a>use-component-selector</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-component-selector.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>必须声明组件选择器</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;use-component-selector&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"use-component-view-encapsulation\"><a href=\"#use-component-view-encapsulation\" class=\"headerlink\" title=\"use-component-view-encapsulation\"></a>use-component-view-encapsulation</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/use-component-view-encapsulation.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>不允许使用 ViewEncapsulation.None</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;use-component-view-encapsulation&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"contextual-lifecycle\"><a href=\"#contextual-lifecycle\" class=\"headerlink\" title=\"contextual-lifecycle\"></a>contextual-lifecycle</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/contextual-lifecycle.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保在正确的上下文中使用生命周期方法</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;contextual-lifecycle&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"prefer-on-push-component-change-detection\"><a href=\"#prefer-on-push-component-change-detection\" class=\"headerlink\" title=\"prefer-on-push-component-change-detection\"></a>prefer-on-push-component-change-detection</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin/docs/rules/prefer-on-push-component-change-detection.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保组件的changeDetection设置为ChangeDetectionStrategy.OnPush</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;prefer-on-push-component-change-detection&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h3 id=\"模版相关规则\"><a href=\"#模版相关规则\" class=\"headerlink\" title=\"模版相关规则\"></a>模版相关规则</h3><h4 id=\"template-banana-in-box\"><a href=\"#template-banana-in-box\" class=\"headerlink\" title=\"template&#x2F;banana-in-box\"></a>template&#x2F;banana-in-box</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/banana-in-box.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保双向数据绑定语法正确</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;template&#x2F;banana-in-box&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"template-click-events-have-key-events\"><a href=\"#template-click-events-have-key-events\" class=\"headerlink\" title=\"template&#x2F;click-events-have-key-events\"></a>template&#x2F;click-events-have-key-events</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/click-events-have-key-events.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li><strong>Accessibility</strong> 确保单击事件至少伴随一个按键事件 <code>keyup</code>、<code>keydown</code> 或 <code>keypress</code>。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;template&#x2F;click-events-have-key-events&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"template-cyclomatic-complexity\"><a href=\"#template-cyclomatic-complexity\" class=\"headerlink\" title=\"template&#x2F;cyclomatic-complexity\"></a>template&#x2F;cyclomatic-complexity</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/cyclomatic-complexity.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>根据指定的限制检查圈复杂度。它是对程序源代码中线性独立路径数量的定量度量</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    &#x2F;**\n     * 默认: &#96;5&#96;\n    *&#x2F;\n    maxComplexity?: number;\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;template&#x2F;cyclomatic-complexity&quot;: [\n        &quot;error&quot;,\n        &#123;\n            &quot;maxComplexity&quot;: 10\n        &#125;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"template-mouse-events-have-key-events\"><a href=\"#template-mouse-events-have-key-events\" class=\"headerlink\" title=\"template&#x2F;mouse-events-have-key-events\"></a>template&#x2F;mouse-events-have-key-events</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/mouse-events-have-key-events.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保鼠标事件 <code>mouseout</code> 和 <code>mouseover</code> 分别伴随焦点和模糊事件。键盘编码对于无法使用鼠标的身体残疾用户、AT 兼容性和屏幕阅读器用户非常重要。</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;template&#x2F;mouse-events-have-key-events&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"template-no-any\"><a href=\"#template-no-any\" class=\"headerlink\" title=\"template&#x2F;no-any\"></a>template&#x2F;no-any</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/no-any.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>使用<code>$any</code>会抵消 Angular 类型系统的编译时优势</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;template&#x2F;no-any&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"template-no-autofocus\"><a href=\"#template-no-autofocus\" class=\"headerlink\" title=\"template&#x2F;no-autofocus\"></a>template&#x2F;no-autofocus</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/no-autofocus.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保不使用自动对焦属性</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;template&#x2F;no-autofocus&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"template-no-distracting-elements\"><a href=\"#template-no-distracting-elements\" class=\"headerlink\" title=\"template&#x2F;no-distracting-elements\"></a>template&#x2F;no-distracting-elements</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/no-distracting-elements.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>强制不使用分散注意力的元素</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;template&#x2F;no-distracting-elements&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"template-no-positive-tabindex\"><a href=\"#template-no-positive-tabindex\" class=\"headerlink\" title=\"template&#x2F;no-positive-tabindex\"></a>template&#x2F;no-positive-tabindex</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/no-positive-tabindex.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保 tabindex 属性不为正数</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;template&#x2F;no-positive-tabindex&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"template-use-track-by-function\"><a href=\"#template-use-track-by-function\" class=\"headerlink\" title=\"template&#x2F;use-track-by-function\"></a>template&#x2F;use-track-by-function</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/use-track-by-function.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保使用 trackBy 函数</li>\n</ul>\n</li>\n<li><p>选项</p>\n<ul>\n<li>none</li>\n</ul>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;template&#x2F;use-track-by-function&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"template-i18n\"><a href=\"#template-i18n\" class=\"headerlink\" title=\"template&#x2F;i18n\"></a>template&#x2F;i18n</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/i18n.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保遵循 i18n 的最佳实践。检查元素和包含文本的属性上是否缺少 i18n 属性。还可以检查没有 i18n 属性的文本、不使用自定义 ID (@@) 功能的元素以及重复的自定义 ID</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    boundTextAllowedPattern?: string;\n    &#x2F;**\n    * 默认: &#96;true&#96;\n    *&#x2F;\n    checkAttributes?: boolean;\n    &#x2F;**\n    * 默认: &#96;true&#96;\n    *&#x2F;\n    checkDuplicateId?: boolean;\n    &#x2F;**\n    * 默认: &#96;true&#96;\n    *&#x2F;\n    checkId?: boolean;\n    &#x2F;**\n    * 默认: &#96;true&#96;\n    *&#x2F;\n    checkText?: boolean;\n    &#x2F;**\n    * 默认: &#96;[&quot;autocomplete&quot;,&quot;charset&quot;,&quot;class&quot;,&quot;color&quot;,&quot;colspan&quot;,&quot;dir&quot;,&quot;fill&quot;,&quot;for&quot;,&quot;formArrayName&quot;,&quot;formControlName&quot;,&quot;formGroupName&quot;,&quot;height&quot;,&quot;href&quot;,&quot;id&quot;,&quot;lang&quot;,&quot;list&quot;,&quot;name&quot;,&quot;ngClass&quot;,&quot;ngProjectAs&quot;,&quot;role&quot;,&quot;routerLink&quot;,&quot;routerLinkActive&quot;,&quot;src&quot;,&quot;stroke&quot;,&quot;stroke-width&quot;,&quot;style&quot;,&quot;svgIcon&quot;,&quot;tabindex&quot;,&quot;target&quot;,&quot;type&quot;,&quot;value&quot;,&quot;viewBox&quot;,&quot;width&quot;,&quot;xmlns&quot;]&#96;\n    *&#x2F;\n    ignoreAttributes?: string[];\n    ignoreTags?: string[];\n    requireDescription?: boolean;\n    requireMeaning?: boolean;\n&#125;</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&#123;\n    &quot;@angular-eslint&#x2F;template&#x2F;i18n&quot;: [\n        &quot;error&quot;\n    ]\n&#125;</code></pre></li>\n</ul>\n<h4 id=\"template-attributes-order\"><a href=\"#template-attributes-order\" class=\"headerlink\" title=\"template&#x2F;attributes-order\"></a>template&#x2F;attributes-order</h4><ul>\n<li><p><a href=\"https://github.com/angular-eslint/angular-eslint/blob/main/packages/eslint-plugin-template/docs/rules/attributes-order.md\">官方地址</a></p>\n</li>\n<li><p>描述</p>\n<ul>\n<li>确保 HTML 属性和 Angular 绑定根据预期顺序进行排序</li>\n</ul>\n</li>\n<li><p>选项</p>\n  <pre class=\"line-numbers language-typescript\" data-language=\"typescript\"><code class=\"language-typescript\">interface Options &#123;\n    alphabetical?: boolean;\n    &#x2F;**\n    * 默认: &#96;[&quot;STRUCTURAL_DIRECTIVE&quot;,&quot;TEMPLATE_REFERENCE&quot;,&quot;ATTRIBUTE_BINDING&quot;,&quot;INPUT_BINDING&quot;,&quot;TWO_WAY_BINDING&quot;,&quot;OUTPUT_BINDING&quot;]&#96;\n    *\n    * @minItems 6\n    *&#x2F;\n    order?: [\n        (\n        | &quot;STRUCTURAL_DIRECTIVE&quot;\n        | &quot;TEMPLATE_REFERENCE&quot;\n        | &quot;ATTRIBUTE_BINDING&quot;\n        | &quot;INPUT_BINDING&quot;\n        | &quot;TWO_WAY_BINDING&quot;\n        | &quot;OUTPUT_BINDING&quot;\n        ),\n        (\n        | &quot;STRUCTURAL_DIRECTIVE&quot;\n        | &quot;TEMPLATE_REFERENCE&quot;\n        | &quot;ATTRIBUTE_BINDING&quot;\n        | &quot;INPUT_BINDING&quot;\n        | &quot;TWO_WAY_BINDING&quot;\n        | &quot;OUTPUT_BINDING&quot;\n        ),\n        (\n        | &quot;STRUCTURAL_DIRECTIVE&quot;\n        | &quot;TEMPLATE_REFERENCE&quot;\n        | &quot;ATTRIBUTE_BINDING&quot;\n        | &quot;INPUT_BINDING&quot;\n        | &quot;TWO_WAY_BINDING&quot;\n        | &quot;OUTPUT_BINDING&quot;\n        ),\n        (\n        | &quot;STRUCTURAL_DIRECTIVE&quot;\n        | &quot;TEMPLATE_REFERENCE&quot;\n        | &quot;ATTRIBUTE_BINDING&quot;\n        | &quot;INPUT_BINDING&quot;\n        | &quot;TWO_WAY_BINDING&quot;\n        | &quot;OUTPUT_BINDING&quot;\n        ),\n        (\n        | &quot;STRUCTURAL_DIRECTIVE&quot;\n        | &quot;TEMPLATE_REFERENCE&quot;\n        | &quot;ATTRIBUTE_BINDING&quot;\n        | &quot;INPUT_BINDING&quot;\n        | &quot;TWO_WAY_BINDING&quot;\n        | &quot;OUTPUT_BINDING&quot;\n        ),\n        (\n        | &quot;STRUCTURAL_DIRECTIVE&quot;\n        | &quot;TEMPLATE_REFERENCE&quot;\n        | &quot;ATTRIBUTE_BINDING&quot;\n        | &quot;INPUT_BINDING&quot;\n        | &quot;TWO_WAY_BINDING&quot;\n        | &quot;OUTPUT_BINDING&quot;\n        ),\n        ...(\n        | &quot;STRUCTURAL_DIRECTIVE&quot;\n        | &quot;TEMPLATE_REFERENCE&quot;\n        | &quot;ATTRIBUTE_BINDING&quot;\n        | &quot;INPUT_BINDING&quot;\n        | &quot;TWO_WAY_BINDING&quot;\n        | &quot;OUTPUT_BINDING&quot;\n        )[]\n    ];\n&#125;\n</code></pre>\n</li>\n<li><p>示例</p>\n  <pre class=\"line-numbers language-json\" data-language=\"json\"><code class=\"language-json\">&quot;@angular-eslint&#x2F;template&#x2F;attributes-order&quot;: [\n    &quot;error&quot;\n]</code></pre></li>\n</ul>\n<h2 id=\"完整示例\"><a href=\"#完整示例\" class=\"headerlink\" title=\"完整示例\"></a>完整示例</h2><details class=\"custom-details\">\n<summary>Check what you want to copy to your config file</summary>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><div class=\"caption\"><span>.eslintrc.js</span><a href=\"/downloads/code/.eslintrc.js\">view raw</a></div><code class=\"language-javascript\">module.exports &#x3D; {\n    &quot;parserOptions&quot;: {\n        &quot;ecmaFeatures&quot;: {\n            &quot;modules&quot;: true\n        },\n        &quot;project&quot;: [\n            &quot;tsconfig.eslint.json&quot;\n        ],\n        &quot;ecmaVersion&quot;: &quot;latest&quot;,\n        &quot;sourceType&quot;: &quot;module&quot;,\n    },\n    &quot;parser&quot;: &quot;@typescript-eslint&#x2F;parser&quot;,\n    &quot;extends&quot;: [\n        &quot;eslint:recommended&quot;,\n        &quot;plugin:@typescript-eslint&#x2F;recommended&quot;,\n    ],\n    &quot;plugins&quot;: [\n        &quot;import&quot;,\n        &quot;jsdoc&quot;,\n        &quot;unicorn&quot;,\n        &quot;prefer-arrow&quot;,\n\n    ],\n    &quot;rules&quot;: {\n        &quot;@typescript-eslint&#x2F;array-type&quot;: [\n            &quot;error&quot;,\n            {\n                &quot;default&quot;: &quot;generic&quot;\n            }\n        ],\n        &quot;@typescript-eslint&#x2F;ban-ts-comment&quot;: &quot;error&quot;,\n        &quot;@typescript-eslint&#x2F;ban-types&quot;: [\n            &quot;error&quot;,\n            {\n                &quot;types&quot;: {\n                    &quot;Object&quot;: {\n                        &quot;message&quot;: &quot;Use {} instead.&quot;\n                    },\n                    &quot;String&quot;: null\n                }\n            }\n        ],\n        &quot;@typescript-eslint&#x2F;consistent-type-definitions&quot;: &quot;error&quot;,\n        &quot;@typescript-eslint&#x2F;dot-notation&quot;: &quot;off&quot;,\n        &quot;@typescript-eslint&#x2F;explicit-member-accessibility&quot;: [\n            &quot;error&quot;,\n            {\n                &quot;accessibility&quot;: &quot;explicit&quot;,\n                &quot;overrides&quot;: {\n                    &quot;accessors&quot;: &quot;explicit&quot;,\n                    &quot;constructors&quot;: &quot;explicit&quot;,\n                    &quot;parameterProperties&quot;: &quot;explicit&quot;\n                }\n            }\n        ],\n        &quot;@typescript-eslint&#x2F;no-empty-function&quot;: &quot;error&quot;,\n        &quot;@typescript-eslint&#x2F;no-for-in-array&quot;: &quot;error&quot;,\n        &quot;@typescript-eslint&#x2F;no-inferrable-types&quot;: &quot;off&quot;,\n        &quot;@typescript-eslint&#x2F;no-non-null-assertion&quot;: &quot;off&quot;,\n        &quot;@typescript-eslint&#x2F;no-require-imports&quot;: &quot;error&quot;,\n        &quot;@typescript-eslint&#x2F;no-this-alias&quot;: &quot;error&quot;,\n        &quot;@typescript-eslint&#x2F;no-unnecessary-type-assertion&quot;: &quot;off&quot;,\n        &quot;@typescript-eslint&#x2F;no-var-requires&quot;: &quot;error&quot;,\n        &quot;@typescript-eslint&#x2F;prefer-for-of&quot;: &quot;off&quot;,\n        &quot;@typescript-eslint&#x2F;prefer-readonly&quot;: &quot;off&quot;,\n        &quot;@typescript-eslint&#x2F;strict-boolean-expressions&quot;: [\n            &quot;off&quot;,\n            {\n                &quot;allowNullable&quot;: true\n            }\n        ],\n        &quot;arrow-body-style&quot;: [\n            &quot;error&quot;,\n            &quot;as-needed&quot;\n        ],\n        &quot;arrow-parens&quot;: [\n            &quot;error&quot;,\n            &quot;as-needed&quot;\n        ],\n        &quot;brace-style&quot;: [\n            &quot;error&quot;,\n            &quot;1tbs&quot;\n        ],\n        &quot;class-methods-use-this&quot;: &quot;off&quot;,\n        &quot;comma-dangle&quot;: [\n            &quot;error&quot;,\n            &quot;always-multiline&quot;\n        ],\n        &quot;complexity&quot;: [\n            &quot;error&quot;,\n            {\n                &quot;max&quot;: 45\n            }\n        ],\n        &quot;default-case&quot;: &quot;error&quot;,\n        &quot;eqeqeq&quot;: [\n            &quot;off&quot;,\n            &quot;always&quot;\n        ],\n        &quot;import&#x2F;no-default-export&quot;: &quot;error&quot;,\n        &quot;import&#x2F;no-extraneous-dependencies&quot;: &quot;off&quot;,\n        &quot;import&#x2F;no-internal-modules&quot;: &quot;off&quot;,\n        &quot;import&#x2F;no-unassigned-import&quot;: &quot;off&quot;,\n        &quot;import&#x2F;order&quot;: &quot;error&quot;,\n        &quot;linebreak-style&quot;: [\n            &quot;error&quot;,\n            &quot;unix&quot;\n        ],\n        &quot;max-classes-per-file&quot;: [\n            &quot;error&quot;,\n            1\n        ],\n        &quot;max-len&quot;: [\n            &quot;off&quot;,\n            {\n                &quot;code&quot;: 120\n            }\n        ],\n        &quot;max-lines&quot;: [\n            &quot;off&quot;,\n            300\n        ],\n        &quot;newline-per-chained-call&quot;: &quot;off&quot;,\n        &quot;no-duplicate-case&quot;: &quot;error&quot;,\n        &quot;no-empty&quot;: [\n            &quot;error&quot;,\n            {\n                &quot;allowEmptyCatch&quot;: true\n            }\n        ],\n        &quot;no-extra-bind&quot;: &quot;error&quot;,\n        &quot;no-invalid-this&quot;: &quot;error&quot;,\n        &quot;no-irregular-whitespace&quot;: &quot;error&quot;,\n        &quot;no-magic-numbers&quot;: &quot;off&quot;,\n        &quot;no-multiple-empty-lines&quot;: &quot;error&quot;,\n        &quot;no-new-func&quot;: &quot;error&quot;,\n        &quot;no-param-reassign&quot;: &quot;off&quot;,\n        &quot;no-plusplus&quot;: &quot;error&quot;,\n        &quot;no-redeclare&quot;: &quot;error&quot;,\n        &quot;no-return-await&quot;: &quot;error&quot;,\n        &quot;no-sequences&quot;: &quot;error&quot;,\n        &quot;no-sparse-arrays&quot;: &quot;error&quot;,\n        &quot;no-template-curly-in-string&quot;: &quot;error&quot;,\n        &quot;no-void&quot;: &quot;error&quot;,\n        &quot;padding-line-between-statements&quot;: [\n            &quot;off&quot;,\n            {\n                &quot;blankLine&quot;: &quot;always&quot;,\n                &quot;prev&quot;: &quot;*&quot;,\n                &quot;next&quot;: &quot;return&quot;\n            }\n        ],\n        &quot;prefer-const&quot;: [\n            &quot;off&quot;,\n            {\n                &quot;destructuring&quot;: &quot;all&quot;\n            }\n        ],\n        &quot;prefer-object-spread&quot;: &quot;error&quot;,\n        &quot;prefer-template&quot;: &quot;error&quot;,\n        &quot;quote-props&quot;: [\n            &quot;error&quot;,\n            &quot;consistent&quot;\n        ],\n        &quot;space-before-function-paren&quot;: [\n            &quot;error&quot;,\n            {\n                &quot;anonymous&quot;: &quot;always&quot;,\n                &quot;named&quot;: &quot;never&quot;,\n                &quot;asyncArrow&quot;: &quot;always&quot;\n            }\n        ],\n        &quot;space-in-parens&quot;: [\n            &quot;error&quot;,\n            &quot;never&quot;\n        ],\n        &quot;unicorn&#x2F;filename-case&quot;: &quot;error&quot;,\n        &quot;yoda&quot;: &quot;error&quot;\n    },\n    &quot;overrides&quot;: [\n        {\n            &quot;files&quot;: [\n                &quot;*.component.ts&quot;\n            ],\n            &quot;plugins&quot;: [\n                &quot;@angular-eslint&#x2F;eslint-plugin-template&quot;,\n                &quot;@angular-eslint&quot;,\n            ],\n            &quot;rules&quot;: {\n                &quot;@angular-eslint&#x2F;no-empty-lifecycle-method&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;sort-ngmodule-metadata-arrays&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;component-class-suffix&quot;: [\n                    &quot;error&quot;,\n                    {\n                        &quot;suffixes&quot;: [\n                            &quot;Component&quot;\n                        ]\n                    }\n                ],\n                &quot;@angular-eslint&#x2F;directive-class-suffix&quot;: [\n                    &quot;error&quot;,\n                    {\n                        &quot;suffixes&quot;: [\n                            &quot;Directive&quot;\n                        ]\n                    }\n                ],\n                &quot;@angular-eslint&#x2F;component-selector&quot;: [\n                    &quot;error&quot;,\n                    {\n                        &quot;type&quot;: &quot;element&quot;,\n                        &quot;prefix&quot;: &quot;&quot;,\n                        &quot;style&quot;: &quot;kebab-case&quot;\n                    }\n                ],\n                &quot;@angular-eslint&#x2F;use-injectable-provided-in&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;contextual-decorator&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;component-selector&quot;: [\n                    &quot;error&quot;,\n                    {\n                        &quot;type&quot;: &quot;element&quot;,\n                        &quot;prefix&quot;: &quot;&quot;,\n                        &quot;style&quot;: &quot;kebab-case&quot;\n                    }\n                ],\n                &quot;@angular-eslint&#x2F;use-injectable-provided-in&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;contextual-decorator&quot;: &quot;error&quot;,\n\n                &quot;@angular-eslint&#x2F;directive-selector&quot;: [\n                    &quot;error&quot;,\n                    {\n                        &quot;type&quot;: &quot;attribute&quot;,\n                        &quot;prefix&quot;: &quot;&quot;,\n                        &quot;style&quot;: &quot;camelCase&quot;\n                    }\n                ],\n                &quot;@angular-eslint&#x2F;no-attribute-decorator&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;no-output-on-prefix&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;no-pipe-impure&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;no-queries-metadata-property&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;no-lifecycle-call&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;component-max-inline-declarations&quot;: &quot;off&quot;,\n\n                &quot;@angular-eslint&#x2F;no-forward-ref&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;no-input-prefix&quot;: [\n                    &quot;off&quot;,\n                    {\n                        &quot;prefixes&quot;: [\n                            &quot;can&quot;,\n                            &quot;is&quot;,\n                            &quot;should&quot;,\n                            &quot;has&quot;\n                        ]\n                    }\n                ],\n\n                &quot;@angular-eslint&#x2F;pipe-prefix&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;no-output-native&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;prefer-output-readonly&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;relative-url-prefix&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;use-component-selector&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;use-component-view-encapsulation&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;contextual-lifecycle&quot;: [\n                    &quot;error&quot;\n                ],\n                &quot;@angular-eslint&#x2F;prefer-on-push-component-change-detection&quot;: &quot;error&quot;,\n                &quot;@typescript-eslint&#x2F;await-thenable&quot;: &quot;error&quot;,\n                &quot;@typescript-eslint&#x2F;no-unnecessary-boolean-literal-compare&quot;: &quot;error&quot;,\n                &quot;@typescript-eslint&#x2F;no-unnecessary-qualifier&quot;: &quot;error&quot;,\n                &quot;@typescript-eslint&#x2F;no-unnecessary-type-arguments&quot;: &quot;error&quot;,\n                &quot;@typescript-eslint&#x2F;promise-function-async&quot;: &quot;error&quot;,\n            }\n        },\n        {\n            &quot;files&quot;: [\n                &quot;*.ts&quot;\n            ],\n            &quot;parser&quot;: &quot;@typescript-eslint&#x2F;parser&quot;,\n            &quot;plugins&quot;: [\n                &quot;@typescript-eslint&quot;,\n            ],\n            &quot;rules&quot;: {\n                &quot;@typescript-eslint&#x2F;restrict-plus-operands&quot;: &quot;error&quot;,\n                &quot;@typescript-eslint&#x2F;unbound-method&quot;: &quot;error&quot;,\n                &quot;import&#x2F;no-deprecated&quot;: &quot;error&quot;,\n                &quot;no-useless-constructor&quot;: &quot;error&quot;,\n                &quot;@typescript-eslint&#x2F;no-unused-vars&quot;: &quot;error&quot;\n            }\n        },\n        {\n            &quot;files&quot;: [\n                &quot;*.html&quot;\n            ],\n            &quot;parser&quot;: &quot;@angular-eslint&#x2F;template-parser&quot;,\n            &quot;rules&quot;: {\n                &quot;@angular-eslint&#x2F;template&#x2F;banana-in-box&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;accessibility-alt-text&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;accessibility-elements-content&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;accessibility-label-has-associated-control&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;accessibility-table-scope&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;accessibility-valid-aria&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;click-events-have-key-events&quot;: &quot;off&quot;,\n                &#x2F;&#x2F; &quot;@angular-eslint&#x2F;template&#x2F;conditional-complexity&quot;: [\n                &#x2F;&#x2F;     &quot;error&quot;,\n                &#x2F;&#x2F;     {\n                &#x2F;&#x2F;         &quot;maxComplexity&quot;: 5\n                &#x2F;&#x2F;     }\n                &#x2F;&#x2F; ],\n                &quot;@angular-eslint&#x2F;template&#x2F;cyclomatic-complexity&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;mouse-events-have-key-events&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;no-any&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;no-autofocus&quot;: &quot;error&quot;,\n                &#x2F;&#x2F; some bug when use function call in template\n                &#x2F;&#x2F; &quot;@angular-eslint&#x2F;template&#x2F;no-call-expression&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;no-distracting-elements&quot;: &quot;error&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;no-positive-tabindex&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;use-track-by-function&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;i18n&quot;: &quot;off&quot;,\n                &quot;@angular-eslint&#x2F;template&#x2F;attributes-order&quot;: &quot;error&quot;\n                &#x2F;&#x2F; &quot;@angular-eslint&#x2F;template&#x2F;i18n&quot;: [\n                &#x2F;&#x2F;     &quot;error&quot;,\n                &#x2F;&#x2F;     {\n                &#x2F;&#x2F;         &quot;requireDescription&quot;: true\n                &#x2F;&#x2F;     }\n                &#x2F;&#x2F; ]\n            }\n        }\n    ]\n}</code></pre>\n</p>\n</details>\n","text":"Angular 是一个应用设计框架与开发平台，旨在创建高效而精致的单页面应用。ESLint 是一个很棒的 JavaScript 代码检查工具。TypeScrip...","link":"","photos":[],"count_time":{"symbolsCount":"45k","symbolsTime":"41 mins."},"categories":[{"name":"FRONTEND","slug":"FRONTEND","count":7,"path":"api/categories/FRONTEND.json"}],"tags":[{"name":"angular","slug":"angular","count":4,"path":"api/tags/angular.json"},{"name":"eslint","slug":"eslint","count":1,"path":"api/tags/eslint.json"},{"name":"typescript","slug":"typescript","count":1,"path":"api/tags/typescript.json"},{"name":"javascript","slug":"javascript","count":2,"path":"api/tags/javascript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%9C%A8angular%E9%A1%B9%E7%9B%AE%E4%B8%AD%E6%B7%BB%E5%8A%A0eslint\"><span class=\"toc-text\">在angular项目中添加eslint</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%AE%89%E8%A3%85eslint%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">安装eslint插件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AEeslint%E6%8F%92%E4%BB%B6\"><span class=\"toc-text\">配置eslint插件</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E9%85%8D%E7%BD%AElint%E8%A7%84%E5%88%99\"><span class=\"toc-text\">配置lint规则</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E5%9F%BA%E4%BA%8E%E4%B8%8D%E5%90%8C%E6%96%87%E4%BB%B6%E7%B1%BB%E5%9E%8B%E8%A6%86%E7%9B%96%E8%A7%84%E5%88%99\"><span class=\"toc-text\">基于不同文件类型覆盖规则</span></a></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E8%A7%84%E5%88%99%E4%BB%8B%E7%BB%8D\"><span class=\"toc-text\">规则介绍</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#typescript-eslint\"><span class=\"toc-text\">@typescript-eslint</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#array-type\"><span class=\"toc-text\">array-type</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ban-ts-comment\"><span class=\"toc-text\">ban-ts-comment</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#ban-types\"><span class=\"toc-text\">ban-types</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#consistent-type-definitions\"><span class=\"toc-text\">consistent-type-definitions</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#dot-notation\"><span class=\"toc-text\">dot-notation</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#explicit-member-accessibility\"><span class=\"toc-text\">explicit-member-accessibility</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-empty-function\"><span class=\"toc-text\">no-empty-function</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-for-in-array\"><span class=\"toc-text\">no-for-in-array</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-inferrable-types\"><span class=\"toc-text\">no-inferrable-types</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-non-null-assertion\"><span class=\"toc-text\">no-non-null-assertion</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-require-imports\"><span class=\"toc-text\">no-require-imports</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-this-alias\"><span class=\"toc-text\">no-this-alias</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-unnecessary-type-assertion\"><span class=\"toc-text\">no-unnecessary-type-assertion</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-var-requires\"><span class=\"toc-text\">no-var-requires</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#prefer-for-of\"><span class=\"toc-text\">prefer-for-of</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#prefer-readonly\"><span class=\"toc-text\">prefer-readonly</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#strict-boolean-expressions\"><span class=\"toc-text\">strict-boolean-expressions</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#await-thenable\"><span class=\"toc-text\">await-thenable</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-unnecessary-boolean-literal-compare\"><span class=\"toc-text\">no-unnecessary-boolean-literal-compare</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-unnecessary-qualifier\"><span class=\"toc-text\">no-unnecessary-qualifier</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-unnecessary-type-arguments\"><span class=\"toc-text\">no-unnecessary-type-arguments</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#promise-function-async\"><span class=\"toc-text\">promise-function-async</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#restrict-plus-operands\"><span class=\"toc-text\">restrict-plus-operands</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#unbound-method\"><span class=\"toc-text\">unbound-method</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-unused-vars\"><span class=\"toc-text\">no-unused-vars</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-explicit-any\"><span class=\"toc-text\">no-explicit-any</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-unsafe-argument\"><span class=\"toc-text\">no-unsafe-argument</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-unsafe-assignment\"><span class=\"toc-text\">no-unsafe-assignment</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-unsafe-call\"><span class=\"toc-text\">no-unsafe-call</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-unsafe-member-access\"><span class=\"toc-text\">no-unsafe-member-access</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-unsafe-return\"><span class=\"toc-text\">no-unsafe-return</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-useless-empty-export\"><span class=\"toc-text\">no-useless-empty-export</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#angular-eslint-eslint-plugin\"><span class=\"toc-text\">@angular-eslint&#x2F;eslint-plugin</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-empty-lifecycle-method\"><span class=\"toc-text\">no-empty-lifecycle-method</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#sort-ngmodule-metadata-arrays\"><span class=\"toc-text\">sort-ngmodule-metadata-arrays</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#component-class-suffix\"><span class=\"toc-text\">component-class-suffix</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#directive-class-suffix\"><span class=\"toc-text\">directive-class-suffix</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#component-selector\"><span class=\"toc-text\">component-selector</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#use-injectable-provided-in\"><span class=\"toc-text\">use-injectable-provided-in</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#contextual-decorator\"><span class=\"toc-text\">contextual-decorator</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#directive-selector\"><span class=\"toc-text\">directive-selector</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-attribute-decorator\"><span class=\"toc-text\">no-attribute-decorator</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-output-on-prefix\"><span class=\"toc-text\">no-output-on-prefix</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-pipe-impure\"><span class=\"toc-text\">no-pipe-impure</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-queries-metadata-property\"><span class=\"toc-text\">no-queries-metadata-property</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-lifecycle-call\"><span class=\"toc-text\">no-lifecycle-call</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#component-max-inline-declarations\"><span class=\"toc-text\">component-max-inline-declarations</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-forward-ref\"><span class=\"toc-text\">no-forward-ref</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-input-prefix\"><span class=\"toc-text\">no-input-prefix</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#pipe-prefix\"><span class=\"toc-text\">pipe-prefix</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#no-output-native\"><span class=\"toc-text\">no-output-native</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#prefer-output-readonly\"><span class=\"toc-text\">prefer-output-readonly</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#relative-url-prefix\"><span class=\"toc-text\">relative-url-prefix</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#use-component-selector\"><span class=\"toc-text\">use-component-selector</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#use-component-view-encapsulation\"><span class=\"toc-text\">use-component-view-encapsulation</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#contextual-lifecycle\"><span class=\"toc-text\">contextual-lifecycle</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#prefer-on-push-component-change-detection\"><span class=\"toc-text\">prefer-on-push-component-change-detection</span></a></li></ol></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#%E6%A8%A1%E7%89%88%E7%9B%B8%E5%85%B3%E8%A7%84%E5%88%99\"><span class=\"toc-text\">模版相关规则</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-banana-in-box\"><span class=\"toc-text\">template&#x2F;banana-in-box</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-click-events-have-key-events\"><span class=\"toc-text\">template&#x2F;click-events-have-key-events</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-cyclomatic-complexity\"><span class=\"toc-text\">template&#x2F;cyclomatic-complexity</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-mouse-events-have-key-events\"><span class=\"toc-text\">template&#x2F;mouse-events-have-key-events</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-no-any\"><span class=\"toc-text\">template&#x2F;no-any</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-no-autofocus\"><span class=\"toc-text\">template&#x2F;no-autofocus</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-no-distracting-elements\"><span class=\"toc-text\">template&#x2F;no-distracting-elements</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-no-positive-tabindex\"><span class=\"toc-text\">template&#x2F;no-positive-tabindex</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-use-track-by-function\"><span class=\"toc-text\">template&#x2F;use-track-by-function</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-i18n\"><span class=\"toc-text\">template&#x2F;i18n</span></a></li><li class=\"toc-item toc-level-4\"><a class=\"toc-link\" href=\"#template-attributes-order\"><span class=\"toc-text\">template&#x2F;attributes-order</span></a></li></ol></li></ol></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E5%AE%8C%E6%95%B4%E7%A4%BA%E4%BE%8B\"><span class=\"toc-text\">完整示例</span></a></li></ol>","author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"python pip proxy","uid":"e10b3e307ab7cce969dd23a6ff7cab07","slug":"proxy/python","date":"2023-04-05T10:00:00.000Z","updated":"2023-06-21T06:11:51.996Z","comments":true,"path":"api/articles/proxy/python.json","keywords":null,"cover":"/images/python.png","text":"Python is a high-level, general-purpose programming language. Its design philoso...","link":"","photos":[],"count_time":{"symbolsCount":498,"symbolsTime":"1 mins."},"categories":[{"name":"PROXY","slug":"PROXY","count":4,"path":"api/categories/PROXY.json"}],"tags":[{"name":"python","slug":"python","count":1,"path":"api/tags/python.json"}],"author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"javascript type check","uid":"587ccc5993ea7af286d7fe7fba152d8c","slug":"frontend/type-check","date":"2023-03-23T08:00:00.000Z","updated":"2023-08-03T01:39:27.170Z","comments":true,"path":"api/articles/frontend/type-check.json","keywords":null,"cover":"/images/type-check.png","text":"In this article, How to Check the Type of a Variable or Object in JavaScript? In...","link":"","photos":[],"count_time":{"symbolsCount":"2.6k","symbolsTime":"2 mins."},"categories":[{"name":"FRONTEND","slug":"FRONTEND","count":7,"path":"api/categories/FRONTEND.json"}],"tags":[{"name":"javascript","slug":"javascript","count":2,"path":"api/tags/javascript.json"}],"author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}