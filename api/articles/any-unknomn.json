{"title":"ts 中 any、unknown、{}、object 的区别","uid":"22e810e3b4957093defc777cc7b799b3","slug":"any-unknomn","date":"2025-04-24T09:27:56.038Z","updated":"2025-04-24T09:27:56.038Z","comments":true,"path":"api/articles/any-unknomn.json","keywords":null,"cover":"https://img.kidwen.top/file/AgACAgUAAyEGAASHUuUOAAM4aAmh0qyVHG-I_eXt-6C8YEXW9Q8AAtbAMRuoQFBUpgSyfIfSRa8BAAMCAAN4AAM2BA.png","content":"<p>在 typescript 中，<code>any</code>、<code>unknown</code>、<code>&#123;&#125;</code> 和 <code>object</code> 是四种不同的类型，它们在类型系统中的用途和含义各不相同。下面是它们之间的区别：</p>\n<h2 id=\"any\"><a href=\"#any\" class=\"headerlink\" title=\"any\"></a><strong>any</strong></h2><ul>\n<li><code>any</code> 是 TypeScript 中最宽松的类型，它可以表示任何类型的值。</li>\n<li>使用 <code>any</code> 时，TypeScript 不会对该值进行任何类型检查，这意味着你可以对它执行任何操作，而不会引发编译错误。</li>\n<li>这使得 <code>any</code> 非常灵活，但也可能导致类型安全性降低。</li>\n</ul>\n<div class=\"language-typescript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">typescript</span><pre class=\"shiki material-theme-darker\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #EEFFFF\"> value</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">any</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">42</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// number</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// string</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FF9CAC\">true</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// boolean</span></span></code></pre></div><h2 id=\"unknown\"><a href=\"#unknown\" class=\"headerlink\" title=\"unknown\"></a><strong>unknown</strong></h2><ul>\n<li><code>unknown</code> 它表示一个未知的值。</li>\n<li>与 <code>any</code> 不同，使用 <code>unknown</code> 时，TypeScript 会对该值进行类型检查，因此在使用之前必须先进行类型检查或类型断言。</li>\n<li>这使得 <code>unknown</code> 更加安全，因为它强制你在使用值之前了解它的类型。</li>\n</ul>\n<div class=\"language-typescript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">typescript</span><pre class=\"shiki material-theme-darker\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #EEFFFF\"> value</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">unknown</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">42</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// number</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// string</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #EEFFFF\"> (</span><span style=\"color: #89DDFF\">typeof</span><span style=\"color: #EEFFFF\"> value </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">string</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #F07178\">(</span><span style=\"color: #EEFFFF\">value</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toUpperCase</span><span style=\"color: #F07178\">())</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #F07178\"> </span><span style=\"color: #545454; font-style: italic\">// 可以安全地调用字符串方法</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;</span></span></code></pre></div><h2 id=\"\"><a href=\"#\" class=\"headerlink\" title=\"{}\"></a><strong>{}</strong></h2><ul>\n<li><code>&#123;&#125;</code> 是一个空对象类型，表示一个非原始类型的值。</li>\n<li>它可以接受可以接受除了 null 和 undefined 之外的任何值，包括原始类型（如 <code>number</code>、<code>string</code>、<code>boolean</code> 等）。</li>\n<li>不能对 <code>&#123;&#125;</code>类型的变量随意添加或访问属性（除非这些属性在 Object.prototype 上）。</li>\n</ul>\n<div class=\"language-typescript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">typescript</span><pre class=\"shiki material-theme-darker\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #EEFFFF\"> value</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#123;&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">42</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 允许</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">string</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 允许</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FF9CAC\">true</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 允许</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">toString</span><span style=\"color: #EEFFFF\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 允许</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">foo </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">123</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 错误：类型上不存在属性 foo</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">bar</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// // 错误：类型上不存在属性 bar</span></span></code></pre></div><h2 id=\"object\"><a href=\"#object\" class=\"headerlink\" title=\"object\"></a><strong>object</strong></h2><ul>\n<li><code>object</code> 是一个更广泛的类型，表示任何非原始类型的值。</li>\n<li>它可以接受对象、数组、函数等，但不能接受原始类型（如 <code>number</code>、<code>string</code>、<code>boolean</code> 等）。</li>\n<li><code>object</code> 更加灵活，因为它可以表示任何非原始类型的值。</li>\n</ul>\n<div class=\"language-typescript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">typescript</span><pre class=\"shiki material-theme-darker\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">let</span><span style=\"color: #EEFFFF\"> value</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #FFCB6B\">object</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#123;&#125;;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 对象</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> []</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 数组</span></span>\n<span class=\"line\"><span style=\"color: #82AAFF\">value</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#123;&#125;;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 函数</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">value </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">42</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 错误：number 不是对象类型</span></span></code></pre></div><h2 id=\"总结\"><a href=\"#总结\" class=\"headerlink\" title=\"总结\"></a><strong>总结</strong></h2><ul>\n<li><code>any</code>：最宽松的类型，可以表示任何类型的值，类型检查被禁用。</li>\n<li><code>unknown</code>：表示未知的值，必须在使用之前进行类型检查或类型断言。</li>\n<li><code>&#123;&#125;</code>：空对象类型，接受除了 null 和 undefined 之外的任何值, 保持基本的类型检查，不允许随意访问不存在的属性。</li>\n<li><code>object</code>：表示任何非原始类型的值，包括对象、数组和函数。</li>\n</ul>\n","text":"在 typescript 中，any、unknown、{} 和 object 是四种不同的类型，它们在类型系统中的用途和含义各不相同。下面是它们之间的区别： a...","permalink":"/post/any-unknomn","photos":[],"count_time":{"symbolsCount":"1.5k","symbolsTime":"1 mins."},"categories":[{"name":"TYPESCRIPT","slug":"TYPESCRIPT","count":2,"path":"api/categories/TYPESCRIPT.json"}],"tags":[{"name":"typescript","slug":"typescript","count":3,"path":"api/tags/typescript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#any\"><span class=\"toc-text\">any</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#unknown\"><span class=\"toc-text\">unknown</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\"><span class=\"toc-text\">{}</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#object\"><span class=\"toc-text\">object</span></a></li><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%80%BB%E7%BB%93\"><span class=\"toc-text\">总结</span></a></li></ol>","author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"Sui","uid":"b6ae7b77bd04a0f91ef99079702efa80","slug":"sui","date":"2025-06-13T09:56:59.370Z","updated":"2025-06-23T03:25:39.529Z","comments":true,"path":"api/articles/sui.json","keywords":null,"cover":"https://img.kidwen.top/file/AgACAgUAAyEGAASHUuUOAAM5aFDgsen2RIXzNNxtuQABcw2pKvnZAAKuwjEb3DKIVoYaqCfDW45tAQADAgADeAADNgQ.png","text":"学习 Sui 和 Move 笔记，这是 Move 书 - 一本全面介绍 Move 编程语言和 Sui 区块链的指南。该书面向对 Move 感兴趣并希望在 Sui...","permalink":"/post/sui","photos":[],"count_time":{"symbolsCount":"8.5k","symbolsTime":"8 mins."},"categories":[{"name":"WEB3","slug":"WEB3","count":1,"path":"api/categories/WEB3.json"}],"tags":[{"name":"web3","slug":"web3","count":1,"path":"api/tags/web3.json"}],"author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"vscode 有趣的功能","uid":"57ebfbfb1ef0759746dce75d6b8c9c2e","slug":"vscode-new","date":"2025-04-02T02:14:09.384Z","updated":"2025-07-18T07:12:57.028Z","comments":true,"path":"api/articles/vscode-new.json","keywords":null,"cover":"https://img.kidwen.top/file/AgACAgUAAyEGAASHUuUOAAMbZ-yjGIZcnEH_cicwtqyOho5vnxYAAsrDMRu16WhXOmkHZAKLCt4BAAMCAAN5AAM2BA.png","text":"本文主要记录一些 vscode 的有趣功能，可能会不定期更新。每次 vscode 更新都会有一个更新文档，文档中会详细介绍新功能和修复的 bug，感兴趣的可以去...","permalink":"/post/vscode-new","photos":[],"count_time":{"symbolsCount":893,"symbolsTime":"1 mins."},"categories":[{"name":"TOOL","slug":"TOOL","count":10,"path":"api/categories/TOOL.json"}],"tags":[{"name":"vscode","slug":"vscode","count":1,"path":"api/tags/vscode.json"}],"author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}