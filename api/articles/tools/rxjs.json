{"title":"rxjs","uid":"9170303394444f49789e30f6c5748970","slug":"tools/rxjs","date":"2023-07-10T02:30:00.000Z","updated":"2023-07-10T09:29:38.985Z","comments":true,"path":"api/articles/tools/rxjs.json","keywords":null,"cover":"/images/rxjs.png","content":"<p>RxJS（Reactive Extensions for JavaScript）是一个用于处理异步和事件驱动编程的库。它基于观察者模式和迭代器模式，并引入了一些函数式编程的概念。RxJS 提供了一组强大的工具和操作符，可以帮助开发者处理和组合异步数据流。</p>\n<p>RxJS 是一个用于响应式编程的库，它的核心概念是 Observable（可观察对象）。Observable 表示一个可能会产生多个值的异步数据源。通过使用 RxJS，你可以对这些数据流进行处理、转换和组合，从而实现更简洁和可维护的代码。</p>\n<p>RxJS 提供了许多操作符，可以对 Observable 进行各种转换和过滤操作。这些操作符包括映射（map）、过滤（filter）、合并（merge）、延迟（delay）、缓冲（buffer）等等。通过组合这些操作符，你可以构建出复杂的数据流处理逻辑。</p>\n<p>除了操作符，RxJS 还提供了一些工具函数和实用程序，例如调度器（Scheduler）、主题（Subject）和订阅（Subscription）等。调度器用于控制 Observable 在何时发出通知，主题充当事件总线，而订阅则用于管理和取消订阅。</p>\n<p>总结：RxJS 是一个强大的前端库，用于处理异步数据流和事件驱动编程。它提供了丰富的操作符和工具函数，可以帮助开发者处理和组合复杂的数据流。通过使用 RxJS，你可以编写出更具可读性和可维护性的异步代码。</p>\n<blockquote><span class=\"custom-blockquote-svg\"><svg width=\"24\" height=\"24\" viewBox=\"0 0 24 24\" fill=\"\" xmlns=\"http://www.w3.org/2000/svg\" data-reactroot=\"\">\n<path fill=\"\" d=\"M22 12C22 6.5 17.5 2 12 2C6.5 2 2 6.5 2 12C2 17.5 6.5 22 12 22C13.8 22 15.5 21.5 17 20.6L22 22L20.7 17C21.5 15.5 22 13.8 22 12Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\" undefined=\"1\"></path>\n<path fill=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\" undefined=\"1\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M17 8.5C15.23 8.97 14.07 10.84 14.01 13.27C14 13.33 14 13.4 14 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M9 8.5C7.23 8.97 6.07 10.84 6.01 13.27C6 13.33 6 13.4 6 13.47V13.5\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M15.97 11.5H16.04C17.12 11.5 18 12.38 18 13.47V13.53C18 14.62 17.12 15.5 16.03 15.5H15.96C14.88 15.5 14 14.62 14 13.53V13.46C14 12.38 14.88 11.5 15.97 11.5Z\"></path>\n<path stroke-linejoin=\"round\" stroke-linecap=\"round\" stroke-miterlimit=\"10\" stroke-width=\"2\" stroke=\"\" d=\"M7.97 11.5H8.04C9.12 11.5 10 12.38 10 13.47V13.53C10 14.62 9.12 15.5 8.03 15.5H7.97C6.88 15.5 6 14.62 6 13.53V13.46C6 12.38 6.88 11.5 7.97 11.5Z\"></path>\n</svg>\n</span><p>RxJS 管理异步事件中的要素概念包括以下几点：</p></blockquote>\n<ul>\n<li>Observable:   代表未来值或事件的可调用集合的想法。</li>\n<li>Observer:     是一个回调集合，它知道如何监听 Observable 传递的值。</li>\n<li>Subscription: 表示 Observable 的执行，主要用于取消执行。</li>\n<li>Operators:    是纯函数，支持使用函数式编程风格处理集合，例如map、filter、concat、reduce 等操作。</li>\n<li>Subject:      相当于EventEmitter，也是将值或事件多播到多个观察者的唯一方法。</li>\n<li>Schedulers:   是控制并发的集中调度程序，允许我们在计算发生时进行协调，例如setTimeout 或 requestAnimationFrame 或其他。</li>\n</ul>\n<h3 id=\"Observable\"><a href=\"#Observable\" class=\"headerlink\" title=\"Observable\"></a>Observable</h3><pre><code><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> <span class=\"token punctuation\">&#123;</span> Observable <span class=\"token punctuation\">&#125;</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'rxjs'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">const</span> observable <span class=\"token operator\">=</span> <span class=\"token keyword\">new</span> <span class=\"token class-name\">Observable</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">subscriber</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n    subscriber<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    subscriber<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token function\">setTimeout</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">=></span> <span class=\"token punctuation\">&#123;</span>\n        subscriber<span class=\"token punctuation\">.</span><span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        subscriber<span class=\"token punctuation\">.</span><span class=\"token function\">complete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'订阅开始'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nobservable<span class=\"token punctuation\">.</span><span class=\"token function\">subscribe</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span>\n    <span class=\"token function\">next</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">x</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'got value '</span> <span class=\"token operator\">+</span> x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">err</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">error</span><span class=\"token punctuation\">(</span><span class=\"token string\">'something wrong occurred: '</span> <span class=\"token operator\">+</span> err<span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n    <span class=\"token function\">complete</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">&#123;</span>\n        console<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n    <span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nconsole<span class=\"token punctuation\">.</span><span class=\"token function\">log</span><span class=\"token punctuation\">(</span><span class=\"token string\">'订阅结束'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token comment\">// 订阅开始</span>\n<span class=\"token comment\">// 1</span>\n<span class=\"token comment\">// 2</span>\n<span class=\"token comment\">// 订阅结束</span>\n<span class=\"token comment\">// got value 3</span>\n<span class=\"token comment\">// done</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</code></pre>\n<h3 id=\"Observer\"><a href=\"#Observer\" class=\"headerlink\" title=\"Observer\"></a>Observer</h3><h3 id=\"Subscription\"><a href=\"#Subscription\" class=\"headerlink\" title=\"Subscription\"></a>Subscription</h3><h3 id=\"Subject\"><a href=\"#Subject\" class=\"headerlink\" title=\"Subject\"></a>Subject</h3><h3 id=\"Schedulers\"><a href=\"#Schedulers\" class=\"headerlink\" title=\"Schedulers\"></a>Schedulers</h3><h3 id=\"Operators\"><a href=\"#Operators\" class=\"headerlink\" title=\"Operators\"></a>Operators</h3>","text":"RxJS（Reactive Extensions for JavaScript）是一个用于处理异步和事件驱动编程的库。它基于观察者模式和迭代器模式，并引入了一些函数式编程的概念。RxJS 提供了一组强大的工具和操作符，可以帮助开发者处理和组合异步数据流。 RxJS 是一个用于响应...","link":"","photos":[],"count_time":{"symbolsCount":"1.6k","symbolsTime":"1 mins."},"categories":[{"name":"TOOL","slug":"TOOL","count":4,"path":"api/categories/TOOL.json"}],"tags":[{"name":"rxjs","slug":"rxjs","count":1,"path":"api/tags/rxjs.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Observable\"><span class=\"toc-text\">Observable</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Observer\"><span class=\"toc-text\">Observer</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Subscription\"><span class=\"toc-text\">Subscription</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Subject\"><span class=\"toc-text\">Subject</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Schedulers\"><span class=\"toc-text\">Schedulers</span></a></li><li class=\"toc-item toc-level-3\"><a class=\"toc-link\" href=\"#Operators\"><span class=\"toc-text\">Operators</span></a></li></ol>","author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"lodash","uid":"d7acadbeb31d4d41403b5db5aed2bd4c","slug":"tools/lodash","date":"2023-07-10T09:00:00.000Z","updated":"2023-07-10T09:19:58.677Z","comments":true,"path":"api/articles/tools/lodash.json","keywords":null,"cover":"/images/lodash.png","text":"一个现代 JavaScript 实用程序库，提供模块化、性能和附加功能。 ","link":"","photos":[],"count_time":{"symbolsCount":37,"symbolsTime":"1 mins."},"categories":[{"name":"TOOL","slug":"TOOL","count":4,"path":"api/categories/TOOL.json"}],"tags":[{"name":"lodash","slug":"lodash","count":1,"path":"api/tags/lodash.json"}],"author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"响应式主题","uid":"26df78b12ea8461da2d0f20e21f4a6a9","slug":"frontend/theming","date":"2023-06-15T05:30:00.000Z","updated":"2023-06-26T00:30:29.342Z","comments":true,"path":"api/articles/frontend/theming.json","keywords":null,"cover":"/images/theming.jpeg","text":"将页面自适应匹配用户的喜好，例如黑色模式 可以调整网站的展示以匹配用户的喜好。首先，需要知道如何借力浏览器来增加网站曝光从而提高品牌知名度。 自定义浏览器界面一些浏览器可以允许基于网站的调色板设置一个主题颜色。然后浏览器界面会自适应设置后的颜色。在页面head中名为theme-c...","link":"","photos":[],"count_time":{"symbolsCount":"4.4k","symbolsTime":"4 mins."},"categories":[{"name":"FRONTEND","slug":"FRONTEND","count":5,"path":"api/categories/FRONTEND.json"}],"tags":[{"name":"theming","slug":"theming","count":1,"path":"api/tags/theming.json"}],"author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}