{"title":"webpack","uid":"e45789ed6a6c4dccaf366d2080a7ca21","slug":"tools/webpack","date":"2023-03-20T04:13:22.000Z","updated":"2023-07-10T10:27:48.562Z","comments":true,"path":"api/articles/tools/webpack.json","keywords":null,"cover":"/images/webpack.svg","content":"<p>Webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.</p>\n<h2 id=\"Config\"><a href=\"#Config\" class=\"headerlink\" title=\"Config\"></a>Config</h2><details class=\"custom-details\">\n<summary>Check what you want to copy to your config file</summary>\n<p><pre class=\"line-numbers language-javascript\" data-language=\"javascript\"><div class=\"caption\"><span>webpack.config.js</span><a href=\"/downloads/code/webpack.config.js\">view raw</a></div><code class=\"language-javascript\"><span class=\"token keyword\">const</span> path <span class=\"token operator\">=</span> <span class=\"token function\">require</span><span class=\"token punctuation\">(</span><span class=\"token string\">'path'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\nmodule<span class=\"token punctuation\">.</span>exports <span class=\"token operator\">=</span> <span class=\"token punctuation\">{</span>\n    <span class=\"token comment\">// entry 表示入口，Webpack 执行构建的第一步将从 Entry 开始，可抽象成输入</span>\n    <span class=\"token comment\">// 类型可以是 string、object、array</span>\n    <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token string\">'./app/entry'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 只有 1 个入口，入口只有 1 个文件</span>\n    <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./app/entry1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./app/entry2'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 只有 1 个入口，入口有两个文件</span>\n    <span class=\"token literal-property property\">entry</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 有两个入口</span>\n        <span class=\"token literal-property property\">a</span><span class=\"token operator\">:</span> <span class=\"token string\">'./app/entry-a'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">b</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./app/entry-b1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'./app/entry-b2'</span><span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 如何输出结果：在 webpack 经过一系列处理后，如何输出最终想要的代码</span>\n    <span class=\"token literal-property property\">output</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token comment\">// 输出文件存放的目录，必须是 string 类型的绝对路径</span>\n        <span class=\"token literal-property property\">path</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'dist'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 输出文件的名称</span>\n        <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'bundle.js'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 完整的名称</span>\n        <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'[name].js'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 在配置了多个 entry 时，通过名称模板为不同的 entry 生成不同的文件名称</span>\n        <span class=\"token literal-property property\">filename</span><span class=\"token operator\">:</span> <span class=\"token string\">'[chunkhash].js'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 根据文件内容的 hash 值生成文件的名称，用于浏览器长期缓存文件</span>\n        <span class=\"token comment\">// 发布到线上的所有资源的 URL 前缀，为 string 类型</span>\n        <span class=\"token literal-property property\">publicPath</span><span class=\"token operator\">:</span> <span class=\"token string\">'/assets/'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 放到指定目录下</span>\n        <span class=\"token literal-property property\">publicPath</span><span class=\"token operator\">:</span> <span class=\"token string\">''</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 放到根目录下</span>\n        <span class=\"token literal-property property\">publicPath</span><span class=\"token operator\">:</span> <span class=\"token string\">'https://cdn.example.com'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 放到 CDN 上</span>\n        <span class=\"token comment\">// 导出库的名称，为 string 类型</span>\n        <span class=\"token comment\">// 不填它时，默认的输出格式是匿名的立即执行函数</span>\n        <span class=\"token literal-property property\">library</span><span class=\"token operator\">:</span> <span class=\"token string\">'MyLibrary'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 导出库的类型，为枚举类型，默认是 var</span>\n        <span class=\"token comment\">// 可以是 umd、umd2、commonjs、commonjs2、amd、this、var、assign、window、global、jsonp</span>\n        <span class=\"token literal-property property\">libraryTarget</span><span class=\"token operator\">:</span> <span class=\"token string\">'umd'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 是否包含有用的文件路径信息到生成的代码里，为 boolean 类型</span>\n        <span class=\"token literal-property property\">pathinfo</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 附加 Chunk 的文件名称</span>\n        <span class=\"token literal-property property\">chunkFilename</span><span class=\"token operator\">:</span> <span class=\"token string\">'[id].js'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">chunkFilename</span><span class=\"token operator\">:</span> <span class=\"token string\">'[chunkhash].js'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// JSONP 异步加载资源时的回调函数名称，需要和服务端搭配使用</span>\n        <span class=\"token literal-property property\">jsonpFunction</span><span class=\"token operator\">:</span> <span class=\"token string\">'myWebpackJsonp'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 生成的 Source Map 文件的名称</span>\n        <span class=\"token literal-property property\">sourceMapFilename</span><span class=\"token operator\">:</span> <span class=\"token string\">'[file].map'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 浏览器开发工具里显示的源码模块名称</span>\n        <span class=\"token literal-property property\">devtoolModuleFilenameTemplate</span><span class=\"token operator\">:</span> <span class=\"token string\">'webpack:///[resource-path]'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token comment\">// 异步加载跨域的资源时使用的方式</span>\n        <span class=\"token literal-property property\">crossOriginLoading</span><span class=\"token operator\">:</span> <span class=\"token string\">'use-credentials'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">crossOriginLoading</span><span class=\"token operator\">:</span> <span class=\"token string\">'anonymous'</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">crossOriginLoading</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 配置模块相关</span>\n    <span class=\"token literal-property property\">module</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">rules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 配置 Loader</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">test</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">\\.jsx?$</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 正则匹配命中要使用 Loader 的文件</span>\n                <span class=\"token literal-property property\">include</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 只会命中这里面的文件</span>\n                    path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">exclude</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 忽略这里面的文件</span>\n                    path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'app/demo-files'</span><span class=\"token punctuation\">)</span>\n                <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n                <span class=\"token literal-property property\">use</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 使用哪些 Loader，有先后次序，从后向前执行</span>\n                    <span class=\"token string\">'style-loader'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 直接使用 Loader 的名称</span>\n                    <span class=\"token punctuation\">{</span>\n                        <span class=\"token literal-property property\">loader</span><span class=\"token operator\">:</span> <span class=\"token string\">'css-loader'</span><span class=\"token punctuation\">,</span>\n                        <span class=\"token literal-property property\">options</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 向 html-loader 传一些参数</span>\n                        <span class=\"token punctuation\">}</span>\n                    <span class=\"token punctuation\">}</span>\n                <span class=\"token punctuation\">]</span>\n            <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">noParse</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 不用解析和处理的模块</span>\n            <span class=\"token operator\">/</span>special<span class=\"token operator\">-</span>library\\<span class=\"token punctuation\">.</span>js$<span class=\"token operator\">/</span> <span class=\"token comment\">// 用正则匹配</span>\n        <span class=\"token punctuation\">]</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 配置插件</span>\n    <span class=\"token literal-property property\">plugins</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 配置寻找模块的规则</span>\n    <span class=\"token literal-property property\">resolve</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">modules</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// 寻找模块的根目录，为 array 类型，默认以 node_modules 为跟目录</span>\n            <span class=\"token string\">'node_modules'</span><span class=\"token punctuation\">,</span>\n            path<span class=\"token punctuation\">.</span><span class=\"token function\">resolve</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'app'</span><span class=\"token punctuation\">)</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">extensions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.json'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.jsx'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'.css'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 模块的后缀名</span>\n        <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 模块别名配置，用于映射模块</span>\n            <span class=\"token comment\">// 将 'module' 映射成 'new-module'，同样，'module/path/file' 也会映射成 'new-module/path/file'</span>\n            <span class=\"token string-property property\">'module'</span><span class=\"token operator\">:</span> <span class=\"token string\">'new-module'</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 使用结尾符号$后，将 'only-module' 映射成 'new-module',</span>\n            <span class=\"token comment\">// 但不像上面的，'module/path/file' 不会映射成 'new-module/path/file'</span>\n            <span class=\"token string-property property\">'only-module$'</span><span class=\"token operator\">:</span> <span class=\"token string\">'new-module'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span> <span class=\"token comment\">// alias 还支持使用数组来更详细地进行配置</span>\n            <span class=\"token punctuation\">{</span>\n                <span class=\"token literal-property property\">name</span><span class=\"token operator\">:</span> <span class=\"token string\">'module'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 老模块</span>\n                <span class=\"token literal-property property\">alias</span><span class=\"token operator\">:</span> <span class=\"token string\">'new-module'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 新模块</span>\n                <span class=\"token comment\">// 是否只映射模块，如果是 true ，则只有 'module' 会被映射；如果是 false ，则 'module/inner/path' 也会被映射</span>\n                <span class=\"token literal-property property\">onlyModule</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n            <span class=\"token punctuation\">}</span>\n        <span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">symlinks</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否根随文件的软链接去搜寻模块的路径</span>\n        <span class=\"token literal-property property\">descriptionFiles</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'package.json'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 模块的描述文件</span>\n        <span class=\"token literal-property property\">mainFields</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 模块的描述文件里描述入口的文件的字段名</span>\n        <span class=\"token literal-property property\">enforceExtension</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否强制导入语句写明文件</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token comment\">// 输出文件的性能检查配置</span>\n    <span class=\"token literal-property property\">performance</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span>\n        <span class=\"token literal-property property\">hints</span><span class=\"token operator\">:</span> <span class=\"token string\">'warning'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 有性能问题时输出警告</span>\n        <span class=\"token literal-property property\">hints</span><span class=\"token operator\">:</span> <span class=\"token string\">'error'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 有性能问题时输出错误</span>\n        <span class=\"token literal-property property\">hints</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 关闭性能检查</span>\n        <span class=\"token literal-property property\">maxAssetSize</span><span class=\"token operator\">:</span> <span class=\"token number\">200000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 最大文件的大小（单位为 bytes）</span>\n        <span class=\"token literal-property property\">maxEntryPointSize</span><span class=\"token operator\">:</span> <span class=\"token number\">400000</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 最大入口文件的大小（单位为 bytes）</span>\n        <span class=\"token function-variable function\">assetFilter</span><span class=\"token operator\">:</span> <span class=\"token keyword\">function</span><span class=\"token punctuation\">(</span><span class=\"token parameter\">assetFilename</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 过滤要检查的文件</span>\n            <span class=\"token keyword\">return</span> assetFilename<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.css'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">||</span> assetFilename<span class=\"token punctuation\">.</span><span class=\"token function\">endsWith</span><span class=\"token punctuation\">(</span><span class=\"token string\">'.js'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">devtool</span><span class=\"token operator\">:</span> <span class=\"token string\">'source-map'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 配置 source-map 类型</span>\n    <span class=\"token literal-property property\">context</span><span class=\"token operator\">:</span> __dirname<span class=\"token punctuation\">,</span> <span class=\"token comment\">// Webpack 使用的根目录，string 类型必须是绝对路径</span>\n    <span class=\"token comment\">// 配置输出代码的运行环境</span>\n    <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'web'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 浏览器，默认</span>\n    <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'webworker'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// WebWorker</span>\n    <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'node'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Node.js，使用 `require` 语句加载 Chunk 代码</span>\n    <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'async-node'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// Node.js，异步加载 Chunk 代码</span>\n    <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'node-webkit'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// nw.js</span>\n    <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'electron-main'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// electron，主线程</span>\n    <span class=\"token literal-property property\">target</span><span class=\"token operator\">:</span> <span class=\"token string\">'electron-renderer'</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// electron，渲染线程</span>\n    <span class=\"token literal-property property\">externals</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 使用来自 JavaScript 运行环境提供的全局变量</span>\n        <span class=\"token literal-property property\">jquery</span><span class=\"token operator\">:</span> <span class=\"token string\">'jQuery'</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">stats</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 控制台输出日志控制</span>\n        <span class=\"token literal-property property\">assets</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">colors</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">errors</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">errorDetails</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">hash</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n    <span class=\"token literal-property property\">devServer</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// DevServer 相关的配置</span>\n        <span class=\"token literal-property property\">proxy</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 代理到后端服务接口</span>\n            <span class=\"token string-property property\">'/api'</span><span class=\"token operator\">:</span> <span class=\"token string\">'http://localhost:3000'</span>\n        <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n        <span class=\"token literal-property property\">contentBase</span><span class=\"token operator\">:</span> path<span class=\"token punctuation\">.</span><span class=\"token function\">join</span><span class=\"token punctuation\">(</span>__dirname<span class=\"token punctuation\">,</span> <span class=\"token string\">'public'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 配置 DevServer HTTP 服务器的文件根目录</span>\n        <span class=\"token literal-property property\">compress</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否开启 Gzip 压缩</span>\n        <span class=\"token literal-property property\">historyApiFallback</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否开发 HTML5 History API 网页</span>\n        <span class=\"token literal-property property\">hot</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否开启模块热替换功能</span>\n        <span class=\"token literal-property property\">https</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否开启 HTTPS 模式</span>\n        <span class=\"token literal-property property\">profile</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否捕捉 Webpack 构建的性能信息，用于分析是什么原因导致构建性能不佳</span>\n        <span class=\"token literal-property property\">cache</span><span class=\"token operator\">:</span> <span class=\"token boolean\">false</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否启用缓存来提升构建速度</span>\n        <span class=\"token literal-property property\">watch</span><span class=\"token operator\">:</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">,</span> <span class=\"token comment\">// 是否开始</span>\n        <span class=\"token literal-property property\">watchOptions</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> <span class=\"token comment\">// 监听模式选项</span>\n            <span class=\"token comment\">// 不监听的文件或文件夹，支持正则匹配，默认为空</span>\n            <span class=\"token literal-property property\">ignored</span><span class=\"token operator\">:</span> <span class=\"token regex\"><span class=\"token regex-delimiter\">/</span><span class=\"token regex-source language-regex\">node_modules</span><span class=\"token regex-delimiter\">/</span></span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 监听到变化后，等 300ms 再执行动作，截流，防止文件更新太快导致重新编译频率太快。默认为 300ms</span>\n            <span class=\"token literal-property property\">aggregateTimeout</span><span class=\"token operator\">:</span> <span class=\"token number\">300</span><span class=\"token punctuation\">,</span>\n            <span class=\"token comment\">// 不停的询问系统指定的文件有没有发生变化，默认每秒询问 1000 次</span>\n            <span class=\"token literal-property property\">poll</span><span class=\"token operator\">:</span> <span class=\"token number\">1000</span>\n        <span class=\"token punctuation\">}</span>\n    <span class=\"token punctuation\">}</span><span class=\"token punctuation\">,</span>\n<span class=\"token punctuation\">}</span><span aria-hidden=\"true\" class=\"line-numbers-rows\"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>\n</p>\n</details>\n","text":"Webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, ...","link":"","photos":[],"count_time":{"symbolsCount":"5.8k","symbolsTime":"5 mins."},"categories":[{"name":"TOOL","slug":"TOOL","count":5,"path":"api/categories/TOOL.json"}],"tags":[{"name":"build","slug":"build","count":2,"path":"api/tags/build.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#Config\"><span class=\"toc-text\">Config</span></a></li></ol>","author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"prev_post":{"title":"terminal proxy","uid":"99549990e3a692a5bd343420bd9e2a64","slug":"proxy/powershell","date":"2023-03-20T08:10:22.000Z","updated":"2023-07-31T08:28:56.972Z","comments":true,"path":"api/articles/proxy/powershell.json","keywords":null,"cover":"/images/terminal.png","text":"terminal is a task automation and configuration management program from Microsoft, consisting of a command-line shell and the associated scr...","link":"","photos":[],"count_time":{"symbolsCount":484,"symbolsTime":"1 mins."},"categories":[{"name":"PROXY","slug":"PROXY","count":4,"path":"api/categories/PROXY.json"}],"tags":[{"name":"terminal","slug":"terminal","count":1,"path":"api/tags/terminal.json"}],"author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"develope with hexo","uid":"234ca5fd8ee7c41e1376bd4bc2b2e5c4","slug":"hexo","date":"2023-03-15T08:10:22.000Z","updated":"2023-06-21T06:11:51.995Z","comments":true,"path":"api/articles/hexo.json","keywords":null,"cover":"/images/blog.jpg","text":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the ...","link":"","photos":[],"count_time":{"symbolsCount":620,"symbolsTime":"1 mins."},"categories":[{"name":"ARTICLE","slug":"ARTICLE","count":1,"path":"api/categories/ARTICLE.json"}],"tags":[{"name":"doc","slug":"doc","count":1,"path":"api/tags/doc.json"}],"author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}