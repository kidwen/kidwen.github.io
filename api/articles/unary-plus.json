{"title":"一元加运算符","uid":"b28fd708a6b0cdabb2826b2e3d8e93bc","slug":"unary-plus","date":"2024-04-25T05:48:28.764Z","updated":"2024-06-14T02:40:14.406Z","comments":true,"path":"api/articles/unary-plus.json","keywords":null,"cover":"https://img.kidwen.top/file/dd54dea948e128b8fea23.png","content":"<p><a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Operators/Unary_plus\">一元加（+）</a>对其操作数进行<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/Number#%E5%BC%BA%E5%88%B6%E6%95%B0%E5%AD%97%E8%BD%AC%E6%8D%A2\">强制数字转换</a>，对于大多数没有 <code>@@toPrimitive</code> 的对象，这意味着调用其 <code>valueOf()</code>。但是，如果对象没有自定义的 <code>valueOf()</code> 方法，则基本实现将导致忽略 <code>valueOf()</code>，而使用 <code>toString()</code> 的返回值。</p>\n<h1 id=\"一元加结果\"><a href=\"#一元加结果\" class=\"headerlink\" title=\"一元加结果\"></a>一元加结果</h1><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-darker\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #89DDFF\">+new</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #82AAFF\">Date</span><span style=\"color: #EEFFFF\">()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 当前时间戳；与 new Date().getTime() 相同</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+&#123;&#125;;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// NaN（toString() 返回 &quot;[object Object]&quot;）</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\">[]</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 0（toString() 返回一个空的字符串列表）</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #EEFFFF\">]</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 1（toString() 返回 &quot;1&quot;）</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\">[</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #89DDFF\">,</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">2</span><span style=\"color: #EEFFFF\">]</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// NaN（toString() 返回 &quot;1,2&quot;）</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+new</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #82AAFF\">Set</span><span style=\"color: #EEFFFF\">([</span><span style=\"color: #F78C6C\">1</span><span style=\"color: #EEFFFF\">])</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// NaN（toString() 返回 &quot;[object Set]&quot;）</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">+&#123;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #82AAFF\">valueOf</span><span style=\"color: #89DDFF\">:</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">()</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #C792EA\">=&gt;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #F78C6C\">42</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#125;;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 42</span></span></code></pre></div><h1 id=\"Symbol-toPrimitive\"><a href=\"#Symbol-toPrimitive\" class=\"headerlink\" title=\"Symbol.toPrimitive\"></a>Symbol.toPrimitive</h1><p><strong><code>Symbol.toPrimitive</code></strong> 是内置的 symbol 属性，其指定了一种接受首选类型并返回对象原始值的表示的方法。它被所有的<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures#%E5%BC%BA%E5%88%B6%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\">强类型转换制</a>算法优先调用。</p>\n<p><code>hint</code> 参数的取值是 <code>&quot;number&quot;</code>、<code>&quot;string&quot;</code> 和 <code>&quot;default&quot;</code> 中的任意一个。</p>\n<p><code>&quot;number&quot;</code> hint 用于<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures#%E5%BC%BA%E5%88%B6%E6%95%B0%E5%AD%97%E7%B1%BB%E5%9E%8B%E8%BD%AC%E6%8D%A2\">强制数字类型转换</a>算法。<code>&quot;string&quot;</code> hint 用于<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Reference/Global_Objects/String#%E5%AD%97%E7%AC%A6%E4%B8%B2%E5%BC%BA%E5%88%B6%E8%BD%AC%E6%8D%A2\">强制字符串类型转换</a>算法。<code>&quot;default&quot;</code> hint 用于<a href=\"https://developer.mozilla.org/zh-CN/docs/Web/JavaScript/Data_structures#%E5%BC%BA%E5%88%B6%E5%8E%9F%E5%A7%8B%E5%80%BC%E8%BD%AC%E6%8D%A2\">强制原始值转换</a>算法。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-darker\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> object1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">  [Symbol</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">toPrimitive]</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF; font-style: italic\">hint</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\"> (</span><span style=\"color: #EEFFFF\">hint</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">number</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">      </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">42</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">null;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">  </span><span style=\"color: #89DDFF\">&#125;,</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\">object1)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #545454; font-style: italic\">// Expected output: 42</span></span></code></pre></div><div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-darker\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #545454; font-style: italic\">// 一个没有提供 Symbol.toPrimitive 属性的对象，参与运算时的输出结果</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> obj1 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#123;&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\">obj1)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// NaN</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">`$&#123;</span><span style=\"color: #EEFFFF\">obj1</span><span style=\"color: #89DDFF\">&#125;`</span><span style=\"color: #EEFFFF\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// &quot;[object Object]&quot;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #EEFFFF\">(obj1 </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;&#39;</span><span style=\"color: #EEFFFF\">) </span><span style=\"color: #545454; font-style: italic\">// &quot;[object Objext]&quot;</span></span>\n<span class=\"line\"></span>\n<span class=\"line\"><span style=\"color: #545454; font-style: italic\">// 接下来声明一个对象，手动赋予了 Symbol.toPrimitive 属性，再来查看输出结果</span></span>\n<span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> obj2 </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">    [Symbol</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">toPrimitive]</span><span style=\"color: #89DDFF\">(</span><span style=\"color: #EEFFFF; font-style: italic\">hint</span><span style=\"color: #89DDFF\">)</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\">(</span><span style=\"color: #EEFFFF\">hint</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">number</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #F78C6C\">10</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">if</span><span style=\"color: #F07178\">(</span><span style=\"color: #EEFFFF\">hint</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">string</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #F07178\">) </span><span style=\"color: #89DDFF\">&#123;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">            </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #C3E88D\">hello</span><span style=\"color: #89DDFF\">&#39;</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">        </span><span style=\"color: #89DDFF; font-style: italic\">return</span><span style=\"color: #F07178\"> </span><span style=\"color: #FF9CAC\">true</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #F07178\">    </span><span style=\"color: #89DDFF\">&#125;</span></span>\n<span class=\"line\"><span style=\"color: #89DDFF\">&#125;;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\">obj2)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// 10 - hint 参数值是 &#39;number&#39;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">`$&#123;</span><span style=\"color: #EEFFFF\">obj2</span><span style=\"color: #89DDFF\">&#125;`</span><span style=\"color: #EEFFFF\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// &#39;hello&#39; - hint 参数值是 &#39;string&#39;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">console</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #82AAFF\">log</span><span style=\"color: #EEFFFF\">(obj2 </span><span style=\"color: #89DDFF\">+</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #89DDFF\">&#39;&#39;</span><span style=\"color: #EEFFFF\">)</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// &quot;true&quot; - hint 参数值是 &#39;default&#39;</span></span></code></pre></div><h1 id=\"Symbol-prototype-toPrimitive\"><a href=\"#Symbol-prototype-toPrimitive\" class=\"headerlink\" title=\"Symbol.prototype[@@toPrimitive]\"></a>Symbol.prototype[@@toPrimitive]</h1><p><strong><code>[@@toPrimitive]()</code></strong> 方法可将 Symbol 对象转换为原始值。</p>\n<p>JavaScript 调用 <code>[@@toPrimitive]()</code> 方法将一个对象转换为原始值表示。你不需要自己调用 <code>[@@toPrimitive]()</code> 方法；当对象需要被转换为原始值时，JavaScript 会自动地调用该方法。</p>\n<div class=\"language-javascript\"><button title=\"Copy code\" class=\"copy\"></button><span class=\"lang\">javascript</span><pre class=\"shiki material-theme-darker\" style=\"background-color: #1a1a1a\" tabindex=\"0\"><code><span class=\"line\"><span style=\"color: #C792EA\">const</span><span style=\"color: #EEFFFF\"> sym </span><span style=\"color: #89DDFF\">=</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #82AAFF\">Symbol</span><span style=\"color: #EEFFFF\">(</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #C3E88D\">example</span><span style=\"color: #89DDFF\">&quot;</span><span style=\"color: #EEFFFF\">)</span><span style=\"color: #89DDFF\">;</span></span>\n<span class=\"line\"><span style=\"color: #EEFFFF\">sym </span><span style=\"color: #89DDFF\">===</span><span style=\"color: #EEFFFF\"> sym[Symbol</span><span style=\"color: #89DDFF\">.</span><span style=\"color: #EEFFFF\">toPrimitive]()</span><span style=\"color: #89DDFF\">;</span><span style=\"color: #EEFFFF\"> </span><span style=\"color: #545454; font-style: italic\">// true</span></span>\n<span class=\"line\"></span></code></pre></div>","text":"一元加（+）对其操作数进行强制数字转换，对于大多数没有 @@toPrimitive 的对象，这意味着调用其 valueOf()。但是，如果对象没有自定义的 va...","permalink":"/post/unary-plus","photos":[],"count_time":{"symbolsCount":"2.1k","symbolsTime":"2 mins."},"categories":[{"name":"JAVASCRIPT","slug":"JAVASCRIPT","count":3,"path":"api/categories/JAVASCRIPT.json"}],"tags":[{"name":"javascript","slug":"javascript","count":3,"path":"api/tags/javascript.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E4%B8%80%E5%85%83%E5%8A%A0%E7%BB%93%E6%9E%9C\"><span class=\"toc-text\">一元加结果</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Symbol-toPrimitive\"><span class=\"toc-text\">Symbol.toPrimitive</span></a></li><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#Symbol-prototype-toPrimitive\"><span class=\"toc-text\">Symbol.prototype[@@toPrimitive]</span></a></li></ol>","author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"cloudflare work 随机获取bing图片","uid":"f95226d9f0855b378f638cf659474409","slug":"bing-rand-image","date":"2024-06-11T03:50:02.722Z","updated":"2024-06-27T03:05:31.451Z","comments":true,"path":"api/articles/bing-rand-image.json","keywords":null,"cover":"https://rand-img.kidwen.top?rand=true","text":"Cloudflare Workers 是一个无服务器计算平台，允许开发人员在 Cloudflare 的边缘网络上运行 JavaScript 代码。它提供了强大的...","permalink":"/post/bing-rand-image","photos":[],"count_time":{"symbolsCount":"2.9k","symbolsTime":"3 mins."},"categories":[{"name":"TOOL","slug":"TOOL","count":10,"path":"api/categories/TOOL.json"}],"tags":[{"name":"cloudflare","slug":"cloudflare","count":1,"path":"api/tags/cloudflare.json"},{"name":"bing","slug":"bing","count":1,"path":"api/tags/bing.json"}],"author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}},"next_post":{"title":"[转载]Serv00搭建各种服务","uid":"f3b0ad915ecd5edf3452c4d2cf36b427","slug":"serv00","date":"2024-04-18T11:50:43.183Z","updated":"2024-05-02T17:54:49.650Z","comments":true,"path":"api/articles/serv00.json","keywords":null,"cover":"https://img.kidwen.top/file/4dd73a8b669bb43b0cffb.jpg","text":"这个平台是个 Virtual Host ，没有 Root ，还是 FreeBSD 的系统，不是 Linux ，不太好用。但是优点是隔离性差， Memory 和 ...","permalink":"/post/serv00","photos":[],"count_time":{"symbolsCount":"47k","symbolsTime":"42 mins."},"categories":[{"name":"serv00","slug":"serv00","count":1,"path":"api/categories/serv00.json"}],"tags":[{"name":"pm2","slug":"pm2","count":1,"path":"api/tags/pm2.json"},{"name":"wordpress","slug":"wordpress","count":1,"path":"api/tags/wordpress.json"},{"name":"kodbox","slug":"kodbox","count":1,"path":"api/tags/kodbox.json"},{"name":"lsky-pro","slug":"lsky-pro","count":1,"path":"api/tags/lsky-pro.json"},{"name":"vless","slug":"vless","count":1,"path":"api/tags/vless.json"},{"name":"alist","slug":"alist","count":1,"path":"api/tags/alist.json"},{"name":"synctv","slug":"synctv","count":1,"path":"api/tags/synctv.json"},{"name":"one-api","slug":"one-api","count":1,"path":"api/tags/one-api.json"},{"name":"uptime-kuma","slug":"uptime-kuma","count":1,"path":"api/tags/uptime-kuma.json"},{"name":"bingo","slug":"bingo","count":1,"path":"api/tags/bingo.json"},{"name":"refresh-gpt-chat","slug":"refresh-gpt-chat","count":1,"path":"api/tags/refresh-gpt-chat.json"},{"name":"gpt4-copilot-java","slug":"gpt4-copilot-java","count":1,"path":"api/tags/gpt4-copilot-java.json"},{"name":"zfile","slug":"zfile","count":1,"path":"api/tags/zfile.json"},{"name":"helo","slug":"helo","count":1,"path":"api/tags/helo.json"},{"name":"go-proxy-bingai","slug":"go-proxy-bingai","count":1,"path":"api/tags/go-proxy-bingai.json"},{"name":"pentaract","slug":"pentaract","count":1,"path":"api/tags/pentaract.json"},{"name":"onelist","slug":"onelist","count":1,"path":"api/tags/onelist.json"},{"name":"warpgpt","slug":"warpgpt","count":1,"path":"api/tags/warpgpt.json"},{"name":"coze-discord-proxy","slug":"coze-discord-proxy","count":1,"path":"api/tags/coze-discord-proxy.json"},{"name":"memos","slug":"memos","count":1,"path":"api/tags/memos.json"},{"name":"frps","slug":"frps","count":1,"path":"api/tags/frps.json"},{"name":"rclone","slug":"rclone","count":1,"path":"api/tags/rclone.json"},{"name":"cloudreve","slug":"cloudreve","count":1,"path":"api/tags/cloudreve.json"},{"name":"panindex","slug":"panindex","count":1,"path":"api/tags/panindex.json"}],"author":{"name":"Kidwen","slug":"blog-author","avatar":"https://avatars.githubusercontent.com/u/38277891?v=4","link":"/","description":"Frontend","socials":{"github":"https://github.com/kidwen","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}}}}