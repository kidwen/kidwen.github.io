[{"id":"26df78b12ea8461da2d0f20e21f4a6a9","title":"响应式主题","content":"将页面自适应匹配用户的喜好，例如黑色模式\n可以调整网站的展示以匹配用户的喜好。首先，需要知道如何借力浏览器来增加网站曝光从而提高品牌知名度。\n自定义浏览器界面一些浏览器可以允许基于网站的调色板设置一个主题颜色。然后浏览器界面会自适应设置后的颜色。在页面head中名为theme-color的meta元素中添加颜色。\n&lt;meta name=\"theme-color\" content=\"#00D494\">\n\n\n\n\n\n\n\n\n\n\n像这样将样式信息放在HTML中而不是CSS中可能会显得有点怪异，但是这允许浏览器一旦加载好页面尽快更新它的界面而不是等待CSS加载好。\n使用JavaScript更新theme-color的值。请谨慎操作。如果浏览器的颜色模式变化太频繁会使用户难以接受。请考虑微调主题颜色的细微方式。如果变化过于明显，用户可能会因为感到烦恼而离开。\n也可以在网页manifest中指定一个主题色。这个JSON文件中包含了关于网站的元数据。\n将清单文件的链接放在文档的head。使用rel值为manifest的link元素\n&lt;link rel=\"manifest\" href=\"/manifest.json\">\n\n在manifest文件中，使用键值对（key&#x2F;value）的方式列出所有元数据\n&#123;\n    \"short_name\": \"Clearleft\",\n    \"name\": \"Clearleft design agency\",\n    \"start_url\": \"/\",\n    \"background_color\": \"#00D494\",\n    \"theme_color\": \"#00D494\",\n    \"display\": \"standalone\"\n&#125;\n\n如果访问者决定将您的网站添加到他们的主屏幕上，浏览器将使用您清单文件中的信息来显示适当的快捷方式。\n\n\n\n\n\n\n\n\n\n了解如何添加 Web 应用manifest的更多信息\n\nWeb App Manifest - MDN Web Docs: Mozilla Developer Network (MDN) 提供的关于 Web App Manifest 的详细文档，包含各个属性和用法的解释。\n\nWeb App Manifest Specification - W3C: Web App Manifest 的官方规范文档，由 W3C（World Wide Web Consortium）提供，包含清单文件的详细规范。\n\nIntroduction to Web App Manifests - Google Developers: Google Developers 提供的关于 Web App Manifest 的简介和入门指南，包含示例和最佳实践。\n\n\n通过查阅以上资源，您将能够更深入地了解如何添加和配置 Web 应用清单（Web App Manifest）以及相关属性的使用方法。\n提供一个黑色模式许多操作系统允许用户指定一个黑色或者亮色主题，这是根据用户的主题偏好优化您的网站的好主意。可以通过在媒体特性中的prefers-color-scheme访问此首选项。\n@media (prefers-color-scheme: dark) &#123;\n    // 定义黑色主题样式\n&#125;\n\n\n\n在meta元素中使用prefers-color-scheme媒体特性指定主题颜色。\n&lt;meta name=\"theme-color\" content=\"#ffffff\" media=\"(prefers-color-scheme: light)\">\n&lt;meta name=\"theme-color\" content=\"#000000\" media=\"(prefers-color-scheme: dark)\">\n\n可以在svg中使用prefers-color-scheme媒体特性。如果使用一个SVG文件作为的图标，它也会被黑色模式调节。参考\n使用自定义属性主题化如果在多个地方的CSS中使用了相同的颜色值，在prefers-color-scheme媒体查询中重复所有选择器可能会非常乏味。\nbody &#123;\n  background-color: white;\n  color: black;\n&#125;\ninput &#123;\n  background-color: white;\n  color: black;\n  border-color: black;\n&#125;\nbutton &#123;\n  background-color: black;\n  color: white;\n&#125;\n@media (prefers-color-scheme: dark) &#123;\n  body &#123;\n    background-color: black;\n    color: white;\n  &#125;\n  input &#123;\n    background-color: black;\n    color: white;\n    border-color: white;\n  &#125;\n  button &#123;\n    background-color: white;\n    color: black;\n  &#125;\n&#125;\n\n使用CSS自定义属性来存储颜色值。自定义属性类似于程序中的变量。可以更新这些变量值而不更新其名称。\n如果在prefers-color-scheme媒体查询中更新自定义属性值，这样就没必要重复写各种选择器。\nhtml &#123;\n  --page-color: white;\n  --ink-color: black;\n&#125;\n@media (prefers-color-scheme: dark) &#123;\n  html &#123;\n    --page-color: black;\n    --ink-color: white;\n  &#125;\n&#125;\nbody &#123;\n  background-color: var(--page-color);\n  color: var(--ink-color);\n&#125;\ninput &#123;\n  background-color: var(--page-color);\n  color: var(--ink-color);\n  border-color: var(--ink-color);\n&#125;\nbutton &#123;\n  background-color: var(--ink-color);\n  color: var(--page-color);\n&#125;\n\n\n\n\n有关使用自定义属性进行主题化的更高级示例，请参阅构建配色方案。\n图片如果在HTML中使用SVG， 也可以应用自定义属性。\nsvg &#123;\n  stroke: var(--ink-color);\n  fill: var(--page-color);\n&#125;\n\n现在 icon 会跟着页面上的其他元素一起改变颜色。\n如果想在黑色模式下调节图片的亮度，可以在css中使用filter方法。\n\n\n\n\n\n对于一些图片，可能想完全替换他们在黑色模式下。例如，可能想在黑色模式下展示一个地图。使用&lt;picture&gt;元素包含一个使用prefers-color-scheme媒体查询的&lt;source&gt;元素。\n&lt;picture>\n  &lt;source srcset=\"darkimage.png\" media=\"(prefers-color-scheme: dark)\">\n  &lt;img src=\"lightimage.png\" alt=\"A description of the image.\">\n&lt;/picture>\n\n\n\n表单浏览器为表单字段提供默认调色板。让浏览器知道您的网站同时提供深色和浅色模式。这样，浏览器就可以为表单提供适当的默认样式。\n添加下面代码到CSS中：\nhtml &#123;\n  color-scheme: light;\n&#125;\n@media (prefers-color-scheme: dark) &#123;\n  html &#123;\n    color-scheme: dark;\n  &#125;\n&#125;\n\n也可以使用HTML。添加下面代码到的文档中：\n&lt;meta name=\"supported-color-schemes\" content=\"light dark\">\n\n\n\n使用accent-color属性设置checkboxs， radio 按钮和其他的表单元素的样式。\nhtml &#123;\n  accent-color: red;\n&#125;\n\n深色主题通常具有柔和的品牌颜色。更新深色模式的accent-color。\nhtml &#123;\n  accent-color: red;\n&#125;\n@media (prefers-color-scheme: dark) &#123;\n  html &#123;\n    accent-color: pink;\n  &#125;\n&#125;\n\n为此使用自定义属性是有意义的，这样您就可以将所有颜色声明保存在一个位置。\nhtml &#123;\n  color-scheme: light;\n  --page-color: white;\n  --ink-color: black;\n  --highlight-color: red;\n&#125;\n@media (prefers-color-scheme: dark) &#123;\n  html &#123;\n    color-scheme: dark;\n    --page-color: black;\n    --ink-color: white;\n    --highlight-color: pink;\n  &#125;\n&#125;\nhtml &#123;\n  accent-color: var(--highlight-color);\n&#125;\nbody &#123;\n  background-color: var(--page-color);\n  color: var(--ink-color);\n&#125;\n\n\n\n\n\n\n\n\n\n\n有关使用主题颜色对元素进行着色的更多信息，请参阅有关更多着色的部分。\n","slug":"frontend/theming","date":"2023-06-15T05:30:00.000Z","categories_index":"FRONTEND","tags_index":"theming","author_index":"Kidwen"},{"id":"e9fed11974f8c41ece3cb72b00793f24","title":"animate-angular","content":"Angular Animations is a built-in animation library in Angular framework that allows you to create rich and interactive animations in your application. It provides a powerful set of tools and APIs that make it easy to implement dynamic and smooth animation effects in Angular.\n\n\n\n\n\n\n\n\n\nHere are some features and capabilities of Angular Animations:\n\nDeclarative Syntax: Angular Animations uses a declarative syntax to describe animation effects. You can use specific directives and attributes in your templates, and define animation triggers and state transitions in your component classes to control the behavior of animations.\n\nDiverse Animation Support: Angular Animations supports various types of animation effects including fading, translation, rotation, scaling, color changes, and more. You can create complex animation sequences by combining and chaining multiple animations to achieve richer effects.\n\nTriggers and States: By defining triggers and states, you can control when and how animations are triggered based on specific conditions. Triggers can be mouse events, route navigation, component lifecycle hooks, and more, while states define the transitions between different animation states.\n\nEasing Functions: Angular Animations supports a variety of easing functions to define the speed curve of animations, making them smoother and more natural. You can use built-in easing functions or define custom ones.\n\nAnimation Groups and Parallel Effects: You can combine multiple animations into an animation group, allowing them to play simultaneously or sequentially. This enables you to create more complex animation effects, such as scaling and rotating an element at the same time.\n\nDynamic and Conditional Animations: Angular Animations allows you to enable or disable animations based on dynamic data or conditions. You can use Angular’s data binding and conditional statements to implement dynamic animations based on states or user interactions.\n\nHigh Performance and Optimization: Angular Animations is designed to be a high-performance animation library. It leverages Angular’s change detection mechanism and frame synchronization strategy, as well as utilizes the Web Animations API when available, to achieve hardware-accelerated animation effects.\n\nIn summary, Angular Animations is a powerful animation library provided by the Angular framework. With its declarative syntax and rich set of features, you can easily create interactive and smooth animation effects in your application. Whether it’s a simple element fade-in or a complex animation sequence, Angular Animations provides flexible tools and APIs to implement a wide range of animation effects.\n\n\n\nPreparation\n\n\n\n\n\n\n\n\nAdd relation module in NgModule\nimport &#123; NgModule &#125; from '@angular/core';\nimport &#123; BrowserModule &#125; from '@angular/platform-browser';\nimport &#123; BrowserAnimationsModule &#125; from '@angular/platform-browser/animations';\n\n@NgModule(&#123;\n    imports: [\n        BrowserModule,\n        BrowserAnimationsModule,\n    ],\n    declarations: [ ],\n    bootstrap: [ ],\n&#125;)\nexport class AppModule &#123; &#125;\n\n\n\n\n\n\n\n\n\n\nUse the method or property from @angular/animations\nimport &#123;\n    trigger,\n    state,\n    style,\n    animate,\n    transition,\n    // ...\n&#125; from '@angular/animations';\n\nIntroductionstate()\n\n\n\n\n\n\n\n\ndefine the custom state of animation, then you can conver one state to another state to use some animations, the defualt state such as void(the dom not render) and *(the dom rendered)\nstate('disable', style(&#123;\n    backgroundColor: 'rgba(0, 0, 0, .12)',\n    color: 'rgba(0, 0, 0, .38)'\n&#125;))\n\nstyle()\n\n\n\n\n\n\n\n\ndefine the style of state, must be cameCase for style attributes that contain dashes, such as backgroundColor or wrap them in quotes, such as ‘background-color’\nanimate()\n\n\n\n\n\n\n\n\nUse the animate() function to define the length, delay, and easing of a transition, and to designate the style function for defining styles while transitions are taking place. Use the animate() function to define the keyframes() function for multi-step animations. These definitions are placed in the second argument of the animate() function.\nanimate ('duration delay easing')\n\nduration such as 100, &#39;100ms&#39;, &#39;0.1s&#39;\ndelay wait for the value time then run the animation\neasing suche as ease-in, ease-out, ease-in-out\n\ntransition()\n\n\n\n\n\n\n\n\nThe transition() function accepts two arguments: The first argument accepts an expression that defines the direction between two transition states, and the second argument accepts one or a series of animate() steps\ntransition('open => closed', [\n  animate('1s')\n]),\n\ntrigger()\n\n\n\n\n\n\n\n\nKicks off the animation and serves as a container for all other animation function calls. HTML template binds to triggerName. Use the first argument to declare a unique trigger name. Uses array syntax.\n@Component(&#123;\n    selector: 'app-open-close',\n    animations: [\n        trigger('openClose', [\n            state('open', style(&#123;\n                height: '200px',\n                opacity: 1,\n                backgroundColor: 'yellow'\n            &#125;)),\n            state('closed', style(&#123;\n                height: '100px',\n                opacity: 0.8,\n                backgroundColor: 'blue'\n            &#125;)),\n            transition('open => closed', [\n                animate('1s')\n            ]),\n            transition('closed => open', [\n                animate('0.5s')\n            ]),\n        ])\n    ]\n\nExample","slug":"frontend/angular-animate","date":"2023-06-15T02:00:00.000Z","categories_index":"FRONTEND","tags_index":"angular,animate","author_index":"Kidwen"},{"id":"a19d5e0d55b52c82da47e7788eb0a54f","title":"git proxy","content":"Git is a free and open source distributed version control system designed to handle everything from small to very large projects with speed and efficiency.\nShow configgit config -l\n\nSet proxygit config --global http.proxy 127.0.0.1:10809\ngit config --global https.proxy 127.0.0.1:10809\n\nCancle proxygit config --global --unset http.proxy\ngit config --global --unset https.proxy\n","slug":"proxy/git","date":"2023-04-06T09:06:00.000Z","categories_index":"PROXY","tags_index":"git","author_index":"Kidwen"},{"id":"e10b3e307ab7cce969dd23a6ff7cab07","title":"python pip proxy","content":"Python is a high-level, general-purpose programming language. Its design philosophy emphasizes code readability with the use of significant indentation via the off-side rule.\npip 单次设置代理pip install xxx --proxy=http://localhost:10809\n\npip 设置镜像源# C:\\Users\\[userName]\\pip\\pip.ini\n[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple\ntrusted-host = pypi.tuna.tsinghua.edu.cn\n\n[search]\nindex = https://pypi.tuna.tsinghua.edu.cn/simple\n","slug":"proxy/python","date":"2023-04-05T10:00:00.000Z","categories_index":"PROXY","tags_index":"python","author_index":"Kidwen"},{"id":"6ae35be2a385185df87e2564965bc41a","title":"eslint-angular","content":"Angular 是一个应用设计框架与开发平台，旨在创建高效而精致的单页面应用。ESLint 是一个很棒的 JavaScript 代码检查工具。TypeScript 是一种基于 JavaScript 的强类型编程语言。\n在angular项目中添加eslint\n\n\n\n\n\n\n\n\n此命令会默认安装angular-eslint相关依赖,包括@angular-eslint/builder,@angular-eslint/eslint-plugin,@angular-eslint/eslint-plugin-template,@angular-eslint/schematics,@angular-eslint/template-parser,@typescript-eslint/eslint-plugin,@typescript-eslint/parser,并在angular.json文件中自动添加如下配置（如果没有则手动添加）。\n&#123;\n    // ...\n    \"cli\": &#123;\n        // ...\n        \"schematicCollections\": [\"@angular-eslint/schematics\"]\n    &#125;\n&#125;\n\nng add @angular-eslint/schematics\n\n安装eslint插件npm install eslint-plugin-import eslint-plugin-jsdoc eslint-plugin-prefer-arrow eslint-plugin-unicorn --save-dev\n\n配置eslint插件\n\n\n\n\n\n\n\n\n插件用于加载第三方规则集合，在 plugins 属性中，可以定义一个数组，数组中的每个元素都是一个字符串，代表要使用的插件的名称。一旦配置中定义了插件，可以在 rules 属性中使用插件的规则。插件的规则名称由插件名称和规则名称组成，中间使用 &#x2F; 分隔。\n// .eslintrc.js\nmodule.exports = &#123;\n    // ...\n    \"plugins\": [\n        \"import\",\n        \"jsdoc\",\n        \"unicorn\",\n        \"prefer-arrow\",\n    ],\n    // ...\n&#125;\n\n配置lint规则// .eslintrc.js\nmodule.exports = &#123;\n    // ...\n    \"rules\":  &#123;\n        \"import/no-default-export\": \"error\",\n        // ...\n    &#125;,\n    // ...\n&#125;\n\n基于不同文件类型覆盖规则// .eslintrc.js\nmodule.exports = &#123;\n    // ...\n    \"overrides\": [\n        &#123;\n            \"files\": [\n                \"*.component.ts\"\n            ],\n            \"plugins\": [\n                \"@angular-eslint/eslint-plugin-template\",\n                \"@angular-eslint\",\n            ],\n            \"rules\": &#123;\n                \"@angular-eslint/no-empty-lifecycle-method\": \"error\",\n                // ...\n            &#125;\n        &#125;,\n    ]\n&#125;\n\n规则介绍@typescript-eslintarray-type\n官方地址\n\n描述\n\n配置数组声明方式,error代表使用T[]\n\n\n类型\n\n‘error’|Array\n\n\n选项\n  &#123;\n    default?: &quot;array&quot; | &quot;generic&quot; | &quot;array-simple&quot;;\n    readonly?: &quot;array&quot; | &quot;generic&quot; | &quot;array-simple&quot;;\n&#125;\n\n示例\n  &#123;\n    \"@typescript-eslint/array-type\": [\n        \"error\",\n        &#123;\n            \"default\": \"generic\"\n        &#125;\n    ],\n&#125;\n\nban-ts-comment\n官方地址\n\n描述\n\n禁止@ts-&lt;directive&gt;注释或要求指令后的描述\n默认只允许@ts-check\nallow-with-description允许带描述的注释指令\n\n  // @ts-expect-error: description\n\n\ndescriptionFormat正则匹配指令注释后的描述,不匹配则报错\nminimumDescriptionLength指令注释后的描述最短长度\n\n\n选项\n  type DirectiveConfigSchema =\n    | boolean\n    | \"allow-with-description\"\n    | &#123;\n        descriptionFormat?: string;\n        &#125;;\n\ninterface Options &#123;\n    \"ts-expect-error\"?: DirectiveConfigSchema;\n    \"ts-ignore\"?: DirectiveConfigSchema;\n    \"ts-nocheck\"?: DirectiveConfigSchema;\n    \"ts-check\"?: DirectiveConfigSchema;\n    minimumDescriptionLength?: number;\n&#125;\n\nconst defaultOptions: Options = [\n    &#123;\n        \"ts-expect-error\": \"allow-with-description\",\n        \"ts-ignore\": true,\n        \"ts-nocheck\": true,\n        \"ts-check\": false,\n        minimumDescriptionLength: 3,\n    &#125;,\n];\n\n示例\n  &#123;\n    \"@typescript-eslint/ban-ts-comment\": [\n        \"error\",\n        &#123; \n            \"ts-expect-error\": \"allow-with-description\",\n            \"ts-ignore\": true,\n            \"ts-nocheck\": true,\n            \"ts-check\": false,\n            \"minimumDescriptionLength\": 3\n        &#125;\n    ],\n&#125;\n\nban-types\n官方地址\n\n描述\n\n使用小写类型以保持一致性\n\n使用正确的函数类型\n\n使用安全的object类型\n\n\n\n❌\n✅\n\n\n\nString\nstring\n\n\nBoolean\nboolean\n\n\nNumber\nnumber\n\n\nSymbol\nsymbol\n\n\nBigInt\nbigint\n\n\nFunction\n() &#x3D;&gt; {}\n\n\nObject\nobject | 特定类型\n\n\n{}\n特定类型\n\n\n\n\n\n选项\n  interface Options &#123;\ntypes?: &#123;\n    [k: string]:\n    | null\n    | boolean\n    | string\n    | &#123;\n        message?: string;\n        fixWith?: string;\n        suggest?: string[];\n        &#125;;\n&#125;;\nextendDefaults?: boolean;\n&#125;\n\nconst defaultOptions: Options = [&#123;&#125;];\n\n示例\n  &#123;\n    \"@typescript-eslint/ban-types\": \"error\"\n&#125;\n// 或者\n&#123;\n    \"@typescript-eslint/ban-types\": [\n        \"error\",\n        &#123;\n        \"types\": &#123;\n            // 自定义消息描述为什么不能使用此类型\n            \"Foo\": \"Don't use Foo because it is unsafe\",\n\n            // 添加一个自定义消息，并告知插件如何修复这个问题\n            \"OldAPI\": &#123;\n            \"message\": \"Use NewAPI instead\",\n            \"fixWith\": \"NewAPI\"\n            &#125;,\n\n            // 取消默认禁用的类型\n            \"&#123;&#125;\": false\n        &#125;,\n        \"extendDefaults\": true\n        &#125;\n    ]\n&#125;\n\nconsistent-type-definitions\n官方地址\n\n描述\n\n强制使用interface或者type来声明类型\n\n\n选项\n  type Options = \"interface\" | \"type\";\n\nconst defaultOptions: Options = [\"interface\"];\n\n示例\n  &#123;\n   \"@typescript-eslint/consistent-type-definitions\": [\"error\", \"interface\"]\n   // 或者\n   \"@typescript-eslint/consistent-type-definitions\": [\"error\", \"type\"]\n&#125;\n\ndot-notation\n官方地址\n\n描述\n\n尽可能强制执行点表示法\n\n\n\n❌\n✅\n\n\n\nobj[“property”]\nobj.property\n\n\n\n\n\n选项\n  interface Options extends BaseDotNotationOptions &#123;\n    allowPrivateClassPropertyAccess?: boolean;\n    allowProtectedClassPropertyAccess?: boolean;\n    allowIndexSignaturePropertyAccess?: boolean;\n&#125;\n\nconst defaultOptions: Options = &#123;\n    ...baseDotNotationDefaultOptions,\n    allowPrivateClassPropertyAccess: false,\n    allowProtectedClassPropertyAccess: false,\n    allowIndexSignaturePropertyAccess: false,\n&#125;;\n\n示例\n  &#123;\n    // 必须禁用基础规则\n    \"dot-notation\": \"off\",\n    \"@typescript-eslint/dot-notation\": \"error\"\n&#125;\n\nexplicit-member-accessibility\n官方地址\n\n描述\n\n需要对类属性和方法进行显式可访问性修饰符。public, protected, private\n\n\n选项\n  type AccessibilityLevel = \"explicit\" | \"no-public\" | \"off\";\n\ninterface Options &#123;\n    accessibility?: AccessibilityLevel;\n    overrides?: &#123;\n        accessors?: AccessibilityLevel;\n        constructors?: AccessibilityLevel;\n        methods?: AccessibilityLevel;\n        properties?: AccessibilityLevel;\n        parameterProperties?: AccessibilityLevel;\n    &#125;;\n    ignoredMethodNames?: string[];\n&#125;\n\nconst defaultOptions: Options = [&#123; accessibility: \"explicit\" &#125;];\n\n示例\n  &#123;\n    \"@typescript-eslint/explicit-member-accessibility\": \"error\"\n&#125;\n\nno-empty-function\n官方地址\n\n描述\n\n不允许空方法\n\n\n选项\n  \ntype AllowOptionEntries =\n    | 'functions'\n    | 'arrowFunctions'\n    | 'generatorFunctions'\n    | 'methods'\n    | 'generatorMethods'\n    | 'getters'\n    | 'setters'\n    | 'constructors'\n    | 'private-constructors'\n    | 'protected-constructors'\n    | 'asyncFunctions'\n    | 'asyncMethods'\n    | 'decoratedFunctions'\n    | 'overrideMethods';\n\ninterface Options extends BaseNoEmptyFunctionOptions &#123;\n    allow?: Array&lt;AllowOptionEntries>;\n&#125;\nconst defaultOptions: Options = &#123;\n    ...baseNoEmptyFunctionDefaultOptions,\n    allow: [],\n&#125;;\n\n示例\n  &#123;\n    // 必须禁用基础规则\n    \"no-empty-function\": \"off\",\n    \"@typescript-eslint/no-empty-function\": [\n        \"error\",\n        &#123;\n            \"allow\": [\"decoratedFunctions\"]\n        &#125;\n    ]\n&#125;\n\nno-for-in-array\n官方地址\n\n描述\n\n禁止使用 for-in 循环迭代数组。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-for-in-array\": \"error\"\n&#125;\n\nno-inferrable-types\n官方地址\n\n描述\n\n不允许对初始化为数字、字符串或布尔值的变量或参数进行显式类型声明。\n\n\n\n❌\n✅\n\n\n\nconst a: bigint &#x3D; 10n;\nconst a &#x3D; 10n;\n\n\nconst a: bigint &#x3D; BigInt(10);\nconst a &#x3D; BigInt(10);\n\n\nconst a: boolean &#x3D; !0;\nconst a &#x3D; !0;\n\n\nconst a: boolean &#x3D; Boolean(null);\nconst a &#x3D; Boolean(null);\n\n\nconst a: boolean &#x3D; true;\nconst a &#x3D; true;\n\n\nconst a: null &#x3D; null;\nconst a &#x3D; null;\n\n\nconst a: number &#x3D; 10;\nconst a &#x3D; 10;\n\n\nconst a: number &#x3D; Infinity;\nconst a &#x3D; Infinity;\n\n\nconst a: number &#x3D; NaN;\nconst a &#x3D; NaN;\n\n\nconst a: number &#x3D; Number(‘1’);\nconst a &#x3D; Number(‘1’);\n\n\nconst a: RegExp &#x3D; &#x2F;a&#x2F;;\nconst a &#x3D; &#x2F;a&#x2F;;\n\n\nconst a: RegExp &#x3D; new RegExp(‘a’);\nconst a &#x3D; new RegExp(‘a’);\n\n\nconst a: string &#x3D; str;\nconst a &#x3D; str;\n\n\nconst a: string &#x3D; String(1);\nconst a &#x3D; String(1);\n\n\nconst a: symbol &#x3D; Symbol(‘a’);\nconst a &#x3D; Symbol(‘a’);\n\n\nconst a: undefined &#x3D; undefined;\nconst a &#x3D; undefined;\n\n\nconst a: undefined &#x3D; void someValue;\nconst a &#x3D; void someValue;\n\n\n\n\n\n选项\n  interface Options &#123;\n    ignoreParameters?: boolean;\n    ignoreProperties?: boolean;\n&#125;\n\nconst defaultOptions: Options = [\n    &#123; ignoreParameters: false, ignoreProperties: false &#125;,\n];\n\n示例\n  &#123;\n    \"@typescript-eslint/no-inferrable-types\": \"error\"\n&#125;\n\nno-non-null-assertion\n官方地址\n\n描述\n\n禁止使用 ! 进行非空断言后缀运算符。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-non-null-assertion\": \"error\"\n&#125;\n\nno-require-imports\n官方地址\n\n描述\n\n禁止调用 require()\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-require-imports\": \"error\"\n&#125;\n\nno-this-alias\n官方地址\n\n描述\n\n禁止使用 this 别名\n\n\n选项\n  interface Options &#123;\n    /**\n    * 是否忽略解构, 例如 `const &#123; props, state &#125; = this`.\n    */\n    allowDestructuring?: boolean;\n    /**\n    * 忽略的名称, 例如 [\"self\"] for `const self = this;`.\n    */\n    allowedNames?: string[];\n&#125;\n\nconst defaultOptions: Options = [\n    &#123; allowDestructuring: true, allowedNames: [] &#125;,\n];\n\n示例\n  &#123;\n    \"@typescript-eslint/no-this-alias\": \"error\"\n&#125;\n\nno-unnecessary-type-assertion\n官方地址\n\n描述\n\n禁止不更改表达式类型的类型断言。\n\n\n选项\n  interface Options &#123;\n    /**\n     * 忽略的类型名称列表。\n    */\n    typesToIgnore?: string[];\n&#125;\n\nconst defaultOptions: Options = [&#123;&#125;];\n\n示例\n  &#123;\n    \"@typescript-eslint/no-unnecessary-type-assertion\": [\"error\", &#123; \"typesToIgnore\": [\"Foo\"] &#125;]\n&#125;\n\nno-var-requires\n官方地址\n\n描述\n\n不允许 require 语句（导入语句中除外）\n\n\n\n❌\n✅\n\n\n\nvar foo &#x3D; require(‘foo’);\nimport foo &#x3D; require(‘foo’);\n\n\nconst foo &#x3D; require(‘foo’);\nrequire(‘foo’);\n\n\nlet foo &#x3D; require(‘foo’);\nimport foo from ‘foo’;\n\n\n\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-var-requires\": \"error\"\n&#125;\n\nprefer-for-of\n官方地址\n\n描述\n\n尽可能强制使用 for-of 循​​环而不是标准 for 循环。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/prefer-for-of\": \"error\"\n&#125;\n\nprefer-readonly\n官方地址\n\n描述\n\n如果私有成员从未在构造函数外部修改过，则要求将其标记为只读\n\n\n选项\n  interface Options &#123;\n    // 用于限制仅检查立即分配 `lambda` 值的成员。\n    onlyInlineLambdas?: boolean;\n&#125;\n\nconst defaultOptions: Options = [&#123; onlyInlineLambdas: false &#125;];\n\n示例\n  &#123;\n    \"@typescript-eslint/prefer-readonly\": [\"error\", &#123; \"onlyInlineLambdas\": true &#125;]\n&#125;\n\nstrict-boolean-expressions\n官方地址\n\n描述\n\n禁止布尔表达式中的某些类型。\n\n\n选项\n  interface Options &#123;\n    allowString?: boolean;\n    allowNumber?: boolean;\n    allowNullableObject?: boolean;\n    allowNullableBoolean?: boolean;\n    allowNullableString?: boolean;\n    allowNullableNumber?: boolean;\n    allowNullableEnum?: boolean;\n    allowAny?: boolean;\n    allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing?: boolean;\n&#125;\n\nconst defaultOptions: Options = [\n    &#123;\n        allowString: true,\n        allowNumber: true,\n        allowNullableObject: true,\n        allowNullableBoolean: false,\n        allowNullableString: false,\n        allowNullableNumber: false,\n        allowNullableEnum: true,\n        allowAny: false,\n        allowRuleToRunWithoutStrictNullChecksIKnowWhatIAmDoing: false,\n    &#125;,\n];\n\n示例\n  &#123;\n    \"@typescript-eslint/strict-boolean-expressions\": \"error\"\n&#125;\n\nawait-thenable\n官方地址\n\n描述\n\n禁止 await 不是 Thenable 的值。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/await-thenable\": \"error\"\n&#125;\n\nno-unnecessary-boolean-literal-compare\n官方地址\n\n描述\n\n禁止与布尔文字进行不必要的相等比较。\n\n\n选项\n  interface Options &#123;\n    /**\n    * 是否允许可空布尔变量和“true”之间的比较。\n    */\n    allowComparingNullableBooleansToTrue?: boolean;\n    /**\n    * 是否允许可为 null 的布尔变量和“false”之间进行比较。\n    */\n    allowComparingNullableBooleansToFalse?: boolean;\n&#125;\n\nconst defaultOptions: Options = [\n    &#123;\n        allowComparingNullableBooleansToTrue: true,\n        allowComparingNullableBooleansToFalse: true,\n    &#125;,\n];\n示例\n  &#123;\n    \"@typescript-eslint/no-unnecessary-boolean-literal-compare\": \"error\"\n&#125;\n\nno-unnecessary-qualifier\n官方地址\n\n描述\n\n禁止不必要的命名空间限定符。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-unnecessary-qualifier\": \"error\"\n&#125;\n\nno-unnecessary-type-arguments\n官方地址\n\n描述\n\n不允许类型参数等于默认值。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-unnecessary-type-arguments\": \"error\"\n&#125;\n\npromise-function-async\n官方地址\n\n描述\n\n要求任何返回 Promise 的函数或方法被标记为异步。\n\n\n选项\n  interface Options &#123;\n    /**\n    * 是否将“any”和“unknown”视为 Promise。\n    */\n    allowAny?: boolean;\n    /**\n    * 任何额外的类或接口名称都被视为 Promise。\n    */\n    allowedPromiseNames?: string[];\n    checkArrowFunctions?: boolean;\n    checkFunctionDeclarations?: boolean;\n    checkFunctionExpressions?: boolean;\n    checkMethodDeclarations?: boolean;\n&#125;\n\nconst defaultOptions: Options = [\n    &#123;\n        allowAny: true,\n        allowedPromiseNames: [],\n        checkArrowFunctions: true,\n        checkFunctionDeclarations: true,\n        checkFunctionExpressions: true,\n        checkMethodDeclarations: true,\n    &#125;,\n];\n\n示例\n  &#123;\n    \"@typescript-eslint/promise-function-async\": \"error\"\n&#125;\n\nrestrict-plus-operands\n官方地址\n\n描述\n\n要求加法的两个操作数类型相同，并且为 bigint number 或 string。\n\n\n选项\n  interface Options &#123;\n    /**\n    * 是否允许`any`类型值。\n\n    */\n    allowAny?: boolean;\n    /**\n    * 是否允许`boolean`类型值。\n    */\n    allowBoolean?: boolean;\n    /**\n    * 是否允许 `null` 或者 `undefined` 类型值.\n    */\n    allowNullish?: boolean;\n    /**\n    * 是否允许 `bigint`/`number` 类型值和 `string` 类型值相加。\n    */\n    allowNumberAndString?: boolean;\n    /**\n    * 是否允许 `regexp` 类型值。\n    */\n    allowRegExp?: boolean;\n    /**\n    * 是否检查复合赋值，例如`+=`。\n    */\n    checkCompoundAssignments?: boolean;\n&#125;\n\nconst defaultOptions: Options = [&#123; checkCompoundAssignments: false &#125;];\n\n示例\n  &#123;\n    \"@typescript-eslint/restrict-plus-operands\": \"error\"\n&#125;\n\nunbound-method\n官方地址\n\n描述\n\n强制以预期范围调用未绑定方法。\n\n\n选项\n  interface Options &#123;\n    /**\n    * 是否跳过检查“静态”方法是否正确绑定。\n    */\n    ignoreStatic?: boolean;\n&#125;\n\nconst defaultOptions: Options = [&#123; ignoreStatic: false &#125;];\n\n示例\n  &#123;\n    \"@typescript-eslint/unbound-method\": \"error\"\n&#125;\n\nno-unused-vars\n官方地址\n\n描述\n\n禁止使用未使用的变量。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    // 必须禁用基础规则\n    \"no-unused-vars\": \"off\",\n    \"@typescript-eslint/no-unused-vars\": \"error\"\n&#125;\n\nno-explicit-any\n官方地址\n\n描述\n\n禁用 any 类型\n\n\n选项\n  interface Options &#123;\n    /**\n    * 是否启用自动修复，将`any`类型转换为`unknown`类型。\n    */\n    fixToUnknown?: boolean;\n    /**\n    * 是否忽略其余参数数组。\n    */\n    ignoreRestArgs?: boolean;\n&#125;\n\nconst defaultOptions: Options = [\n    &#123; fixToUnknown: false, ignoreRestArgs: false &#125;,\n];\n\n示例\n  &#123;\n    \"@typescript-eslint/no-explicit-any\": \"error\"\n&#125;\n\nno-unsafe-argument\n官方地址\n\n描述\n\n禁止使用any类型的值调用函数。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-unsafe-argument\": \"error\"\n&#125;\n\nno-unsafe-assignment\n官方地址\n\n描述\n\n禁止将任何类型的值分配给变量和属性。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-unsafe-assignment\": \"error\"\n&#125;\n\nno-unsafe-call\n官方地址\n\n描述\n\n禁止调用any类型的值。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-unsafe-call\": \"error\"\n&#125;\n\nno-unsafe-member-access\n官方地址\n\n描述\n\n禁止成员访问any类型的值。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-unsafe-member-access\": \"error\"\n&#125;\n\nno-unsafe-return\n官方地址\n\n描述\n\n禁止从函数返回any类型的值。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-unsafe-return\": \"error\"\n&#125;\n\nno-useless-empty-export\n官方地址\n\n描述\n\n禁止不更改模块文件中任何内容的空导出。\n\n\n选项\n\nnone\n\n\n示例\n  &#123;\n    \"@typescript-eslint/no-useless-empty-export\": \"error\"\n&#125;\n\n完整示例\nCheck what you want to copy to your config file\n.eslintrc.jsview rawmodule.exports = {\n    \"parserOptions\": {\n        \"ecmaFeatures\": {\n            \"modules\": true\n        },\n        \"project\": [\n            \"tsconfig.eslint.json\"\n        ],\n        \"ecmaVersion\": \"latest\",\n        \"sourceType\": \"module\",\n    },\n    \"parser\": \"@typescript-eslint/parser\",\n    \"extends\": [\n        \"eslint:recommended\",\n        \"plugin:@typescript-eslint/recommended\",\n    ],\n    \"plugins\": [\n        \"import\",\n        \"jsdoc\",\n        \"unicorn\",\n        \"prefer-arrow\",\n\n    ],\n    \"rules\": {\n        \"@typescript-eslint/array-type\": [\n            \"error\",\n            {\n                \"default\": \"generic\"\n            }\n        ],\n        \"@typescript-eslint/ban-ts-comment\": \"error\",\n        \"@typescript-eslint/ban-types\": [\n            \"error\",\n            {\n                \"types\": {\n                    \"Object\": {\n                        \"message\": \"Use {} instead.\"\n                    },\n                    \"String\": null\n                }\n            }\n        ],\n        \"@typescript-eslint/consistent-type-definitions\": \"error\",\n        \"@typescript-eslint/dot-notation\": \"off\",\n        \"@typescript-eslint/explicit-member-accessibility\": [\n            \"error\",\n            {\n                \"accessibility\": \"explicit\",\n                \"overrides\": {\n                    \"accessors\": \"explicit\",\n                    \"constructors\": \"explicit\",\n                    \"parameterProperties\": \"explicit\"\n                }\n            }\n        ],\n        \"@typescript-eslint/no-empty-function\": \"error\",\n        \"@typescript-eslint/no-for-in-array\": \"error\",\n        \"@typescript-eslint/no-inferrable-types\": \"off\",\n        \"@typescript-eslint/no-non-null-assertion\": \"off\",\n        \"@typescript-eslint/no-require-imports\": \"error\",\n        \"@typescript-eslint/no-this-alias\": \"error\",\n        \"@typescript-eslint/no-unnecessary-type-assertion\": \"off\",\n        \"@typescript-eslint/no-var-requires\": \"error\",\n        \"@typescript-eslint/prefer-for-of\": \"off\",\n        \"@typescript-eslint/prefer-readonly\": \"off\",\n        \"@typescript-eslint/strict-boolean-expressions\": [\n            \"off\",\n            {\n                \"allowNullable\": true\n            }\n        ],\n        \"arrow-body-style\": [\n            \"error\",\n            \"as-needed\"\n        ],\n        \"arrow-parens\": [\n            \"error\",\n            \"as-needed\"\n        ],\n        \"brace-style\": [\n            \"error\",\n            \"1tbs\"\n        ],\n        \"class-methods-use-this\": \"off\",\n        \"comma-dangle\": [\n            \"error\",\n            \"always-multiline\"\n        ],\n        \"complexity\": [\n            \"error\",\n            {\n                \"max\": 45\n            }\n        ],\n        \"default-case\": \"error\",\n        \"eqeqeq\": [\n            \"off\",\n            \"always\"\n        ],\n        \"import/no-default-export\": \"error\",\n        \"import/no-extraneous-dependencies\": \"off\",\n        \"import/no-internal-modules\": \"off\",\n        \"import/no-unassigned-import\": \"off\",\n        \"import/order\": \"error\",\n        \"linebreak-style\": [\n            \"error\",\n            \"unix\"\n        ],\n        \"max-classes-per-file\": [\n            \"error\",\n            1\n        ],\n        \"max-len\": [\n            \"off\",\n            {\n                \"code\": 120\n            }\n        ],\n        \"max-lines\": [\n            \"off\",\n            300\n        ],\n        \"newline-per-chained-call\": \"off\",\n        \"no-duplicate-case\": \"error\",\n        \"no-empty\": [\n            \"error\",\n            {\n                \"allowEmptyCatch\": true\n            }\n        ],\n        \"no-extra-bind\": \"error\",\n        \"no-invalid-this\": \"error\",\n        \"no-irregular-whitespace\": \"error\",\n        \"no-magic-numbers\": \"off\",\n        \"no-multiple-empty-lines\": \"error\",\n        \"no-new-func\": \"error\",\n        \"no-param-reassign\": \"off\",\n        \"no-plusplus\": \"error\",\n        \"no-redeclare\": \"error\",\n        \"no-return-await\": \"error\",\n        \"no-sequences\": \"error\",\n        \"no-sparse-arrays\": \"error\",\n        \"no-template-curly-in-string\": \"error\",\n        \"no-void\": \"error\",\n        \"padding-line-between-statements\": [\n            \"off\",\n            {\n                \"blankLine\": \"always\",\n                \"prev\": \"*\",\n                \"next\": \"return\"\n            }\n        ],\n        \"prefer-const\": [\n            \"off\",\n            {\n                \"destructuring\": \"all\"\n            }\n        ],\n        \"prefer-object-spread\": \"error\",\n        \"prefer-template\": \"error\",\n        \"quote-props\": [\n            \"error\",\n            \"consistent\"\n        ],\n        \"space-before-function-paren\": [\n            \"error\",\n            {\n                \"anonymous\": \"always\",\n                \"named\": \"never\",\n                \"asyncArrow\": \"always\"\n            }\n        ],\n        \"space-in-parens\": [\n            \"error\",\n            \"never\"\n        ],\n        \"unicorn/filename-case\": \"error\",\n        \"yoda\": \"error\"\n    },\n    \"overrides\": [\n        {\n            \"files\": [\n                \"*.component.ts\"\n            ],\n            \"plugins\": [\n                \"@angular-eslint/eslint-plugin-template\",\n                \"@angular-eslint\",\n            ],\n            \"rules\": {\n                \"@angular-eslint/no-empty-lifecycle-method\": \"error\",\n                \"@angular-eslint/sort-ngmodule-metadata-arrays\": \"error\",\n                \"@angular-eslint/component-class-suffix\": [\n                    \"error\",\n                    {\n                        \"suffixes\": [\n                            \"Component\"\n                        ]\n                    }\n                ],\n                \"@angular-eslint/directive-class-suffix\": [\n                    \"error\",\n                    {\n                        \"suffixes\": [\n                            \"Directive\"\n                        ]\n                    }\n                ],\n                \"@angular-eslint/component-selector\": [\n                    \"error\",\n                    {\n                        \"type\": \"element\",\n                        \"prefix\": \"\",\n                        \"style\": \"kebab-case\"\n                    }\n                ],\n                \"@angular-eslint/use-injectable-provided-in\": \"error\",\n                \"@angular-eslint/contextual-decorator\": \"error\",\n                \"@angular-eslint/component-selector\": [\n                    \"error\",\n                    {\n                        \"type\": \"element\",\n                        \"prefix\": \"\",\n                        \"style\": \"kebab-case\"\n                    }\n                ],\n                \"@angular-eslint/use-injectable-provided-in\": \"error\",\n                \"@angular-eslint/contextual-decorator\": \"error\",\n\n                \"@angular-eslint/directive-selector\": [\n                    \"error\",\n                    {\n                        \"type\": \"attribute\",\n                        \"prefix\": \"\",\n                        \"style\": \"camelCase\"\n                    }\n                ],\n                \"@angular-eslint/no-attribute-decorator\": \"error\",\n                \"@angular-eslint/no-output-on-prefix\": \"error\",\n                \"@angular-eslint/no-pipe-impure\": \"error\",\n                \"@angular-eslint/no-queries-metadata-property\": \"error\",\n                \"@angular-eslint/no-lifecycle-call\": \"off\",\n                \"@angular-eslint/component-max-inline-declarations\": \"off\",\n\n                \"@angular-eslint/no-forward-ref\": \"off\",\n                \"@angular-eslint/no-input-prefix\": [\n                    \"off\",\n                    {\n                        \"prefixes\": [\n                            \"can\",\n                            \"is\",\n                            \"should\",\n                            \"has\"\n                        ]\n                    }\n                ],\n\n                \"@angular-eslint/pipe-prefix\": \"off\",\n                \"@angular-eslint/no-output-native\": \"error\",\n                \"@angular-eslint/prefer-output-readonly\": \"error\",\n                \"@angular-eslint/relative-url-prefix\": \"error\",\n                \"@angular-eslint/use-component-selector\": \"error\",\n                \"@angular-eslint/use-component-view-encapsulation\": \"error\",\n                \"@angular-eslint/contextual-lifecycle\": [\n                    \"error\"\n                ],\n                \"@angular-eslint/prefer-on-push-component-change-detection\": \"error\",\n                \"@typescript-eslint/await-thenable\": \"error\",\n                \"@typescript-eslint/no-unnecessary-boolean-literal-compare\": \"error\",\n                \"@typescript-eslint/no-unnecessary-qualifier\": \"error\",\n                \"@typescript-eslint/no-unnecessary-type-arguments\": \"error\",\n                \"@typescript-eslint/promise-function-async\": \"error\",\n            }\n        },\n        {\n            \"files\": [\n                \"*.ts\"\n            ],\n            \"parser\": \"@typescript-eslint/parser\",\n            \"plugins\": [\n                \"@typescript-eslint\",\n            ],\n            \"rules\": {\n                \"@typescript-eslint/restrict-plus-operands\": \"error\",\n                \"@typescript-eslint/unbound-method\": \"error\",\n                \"import/no-deprecated\": \"error\",\n                \"no-useless-constructor\": \"error\",\n                \"@typescript-eslint/no-unused-vars\": \"error\"\n            }\n        },\n        {\n            \"files\": [\n                \"*.html\"\n            ],\n            \"parser\": \"@angular-eslint/template-parser\",\n            \"rules\": {\n                \"@angular-eslint/template/banana-in-box\": \"error\",\n                \"@angular-eslint/template/accessibility-alt-text\": \"off\",\n                \"@angular-eslint/template/accessibility-elements-content\": \"off\",\n                \"@angular-eslint/template/accessibility-label-has-associated-control\": \"off\",\n                \"@angular-eslint/template/accessibility-table-scope\": \"off\",\n                \"@angular-eslint/template/accessibility-valid-aria\": \"off\",\n                \"@angular-eslint/template/click-events-have-key-events\": \"off\",\n                // \"@angular-eslint/template/conditional-complexity\": [\n                //     \"error\",\n                //     {\n                //         \"maxComplexity\": 5\n                //     }\n                // ],\n                \"@angular-eslint/template/cyclomatic-complexity\": \"off\",\n                \"@angular-eslint/template/mouse-events-have-key-events\": \"error\",\n                \"@angular-eslint/template/no-any\": \"error\",\n                \"@angular-eslint/template/no-autofocus\": \"error\",\n                // some bug when use function call in template\n                // \"@angular-eslint/template/no-call-expression\": \"error\",\n                \"@angular-eslint/template/no-distracting-elements\": \"error\",\n                \"@angular-eslint/template/no-positive-tabindex\": \"off\",\n                \"@angular-eslint/template/use-track-by-function\": \"off\",\n                \"@angular-eslint/template/i18n\": \"off\",\n                \"@angular-eslint/template/attributes-order\": \"error\"\n                // \"@angular-eslint/template/i18n\": [\n                //     \"error\",\n                //     {\n                //         \"requireDescription\": true\n                //     }\n                // ]\n            }\n        }\n    ]\n}\n\n\n","slug":"frontend/eslint-angular","date":"2023-04-01T00:00:00.000Z","categories_index":"FRONTEND","tags_index":"eslint,angular,typescript,javascript","author_index":"Kidwen"},{"id":"587ccc5993ea7af286d7fe7fba152d8c","title":"javascript type check","content":"In this article, How to Check the Type of a Variable or Object in JavaScript? In JavaScript, the typeof operator is used to determine the typeof an object or variable. JavaScript, on the other hand, is a dynamically typed (or weakly typed) language. This indicates that a variable can have any type of value. The type of the value assigned to a variable determines the type of the variable.\nCheck Undefinedconst variable = undefined;\n\ntypeof variable; // 'undefined'\n// or\nObject.prototype.toString.call(variable); // '[object Undefined]'\nCheck Nullconst empty = null;\n\nempty === null; // true\n// or\nObject.prototype.toString.call(empty); // '[object Null]'\n\nCheck Arrayconst arr = [];\n\narr instanceof Array; // true\n// or\nArray.isArray(arr); // true\n// or\nObject.prototype.toString.call(arr); // '[object Array]'\n\nCheck Mapconst map = new Map();\n\nObject.prototype.toString.call(map); // '[object Map]'\n\nCheck Booleanconst bool = true;\n\nObject.prototype.toString.call(bool); // '[object Boolean]'\n\nCheck Numberconst num = 1;\n\nObject.prototype.toString.call(num); // '[object Number]'\n\nCheck Stringconst str = 'str';\n\nObject.prototype.toString.call(str); // '[object String]'\n\nCheck Symbolconst sym = Symbol('sym');\n\nObject.prototype.toString.call(sym); // '[object Symbol]'\n\nCheck Objectconst obj = &#123;&#125;;\n\nObject.prototype.toString.call(obj); // '[object Object]'\n\nCheck Functionfunction fn () &#123;&#125;;\n// or\nconst fn = () => &#123;&#125;;\n// or\nconst fn = function () &#123;&#125;;\n\nObject.prototype.toString.call(fn); // '[object Function]'\n// or\ntypeof fn; // 'function'\n\nCheck Errorconst err = new Error();\n\nObject.prototype.toString.call(err); // '[object Error]'\n\nCheck RegExpconst reg = new RegExp();\n\nObject.prototype.toString.call(reg); // '[object RegExp]'\n\nCheck MathObject.prototype.toString.call(Math); // '[object Math]'\n\nCheck Documentconst doc = new Document();\n\nObject.prototype.toString.call(doc); // '[object Document]'\n\nCheck WindowObject.prototype.toString.call(window); // '[object Window]'\n","slug":"frontend/type-check","date":"2023-03-23T08:00:00.000Z","categories_index":"FRONTEND","tags_index":"javascript","author_index":"Kidwen"},{"id":"ff69a280ff08e882e58a7c457c768850","title":"http-server","content":"http-server is a simple, zero-configuration command-line static HTTP server. It is powerful enough for production usage, but it’s simple and hackable enough to be used for testing, local development and learning.\nInstallnpm i -g http-server\n\nUse# default ./public or ./\nhttp-server ./views\n","slug":"frontend/http-server","date":"2023-03-22T06:00:00.000Z","categories_index":"FRONTEND","tags_index":"server","author_index":"Kidwen"},{"id":"ab96f0de050fe2a435af431c84a21f25","title":"npm/yarn proxy/registry","content":"npm stands for Node Package Manager. It’s a library and registry for JavaScript software packages. npm also has command-line tools to help you install the different packages and manage their dependencies.Yarn is a package manager that doubles down as project manager. Whether you work on one-shot projects or large monorepos, as a hobbyist or an enterprise user, we’ve got you covered.\nNPMShow config# show all config\nnpm config ls -l\n# or\nnpm get proxy\n\nSet proxynpm config set proxy=http://127.0.0.1:10809\n\nCancle proxynpm config delete proxy\n\nSet registrynpm config set registry https://registry.npmmirror.com\n\nYarnShow configyarn config list\n# or\nyarn config get proxy\n\nSet proxyyarn config set proxy http://127.0.0.1:10809\n\nCancle proxyyarn config delete proxy\n\nSet registryyarn config set registry https://registry.npmmirror.com\n","slug":"proxy/npm-yarn","date":"2023-03-20T08:12:22.000Z","categories_index":"PROXY,REGISTRY","tags_index":"npm,yarn","author_index":"Kidwen"},{"id":"ade9b33a0b798288cc1a002920982285","title":"powershell proxy","content":"PowerShell is a task automation and configuration management program from Microsoft, consisting of a command-line shell and the associated scripting language.\nShownetsh winhttp show proxy\n\nSetnetsh winhttp set proxy 127.0.0.1:10808\n\nCanclenetsh winhttp reset proxy\n","slug":"proxy/powershell","date":"2023-03-20T08:10:22.000Z","categories_index":"PROXY","tags_index":"powershell","author_index":"Kidwen"},{"id":"e45789ed6a6c4dccaf366d2080a7ca21","title":"webpack","content":"Webpack is a module bundler. Its main purpose is to bundle JavaScript files for usage in a browser, yet it is also capable of transforming, bundling, or packaging just about any resource or asset.\nConfig\nCheck what you want to copy to your config file\nwebpack.config.jsview rawconst path = require('path');\nmodule.exports = {\n    // entry 表示入口，Webpack 执行构建的第一步将从 Entry 开始，可抽象成输入\n    // 类型可以是 string、object、array\n    entry: './app/entry', // 只有 1 个入口，入口只有 1 个文件\n    entry: ['./app/entry1', './app/entry2'], // 只有 1 个入口，入口有两个文件\n    entry: { // 有两个入口\n        a: './app/entry-a',\n        b: ['./app/entry-b1', './app/entry-b2']\n    },\n    // 如何输出结果：在 webpack 经过一系列处理后，如何输出最终想要的代码\n    output: {\n        // 输出文件存放的目录，必须是 string 类型的绝对路径\n        path: path.resolve(__dirname, 'dist'),\n        // 输出文件的名称\n        filename: 'bundle.js', // 完整的名称\n        filename: '[name].js', // 在配置了多个 entry 时，通过名称模板为不同的 entry 生成不同的文件名称\n        filename: '[chunkhash].js', // 根据文件内容的 hash 值生成文件的名称，用于浏览器长期缓存文件\n        // 发布到线上的所有资源的 URL 前缀，为 string 类型\n        publicPath: '/assets/', // 放到指定目录下\n        publicPath: '', // 放到根目录下\n        publicPath: 'https://cdn.example.com', // 放到 CDN 上\n        // 导出库的名称，为 string 类型\n        // 不填它时，默认的输出格式是匿名的立即执行函数\n        library: 'MyLibrary',\n        // 导出库的类型，为枚举类型，默认是 var\n        // 可以是 umd、umd2、commonjs、commonjs2、amd、this、var、assign、window、global、jsonp\n        libraryTarget: 'umd',\n        // 是否包含有用的文件路径信息到生成的代码里，为 boolean 类型\n        pathinfo: true,\n        // 附加 Chunk 的文件名称\n        chunkFilename: '[id].js',\n        chunkFilename: '[chunkhash].js',\n        // JSONP 异步加载资源时的回调函数名称，需要和服务端搭配使用\n        jsonpFunction: 'myWebpackJsonp',\n        // 生成的 Source Map 文件的名称\n        sourceMapFilename: '[file].map',\n        // 浏览器开发工具里显示的源码模块名称\n        devtoolModuleFilenameTemplate: 'webpack:///[resource-path]',\n        // 异步加载跨域的资源时使用的方式\n        crossOriginLoading: 'use-credentials',\n        crossOriginLoading: 'anonymous',\n        crossOriginLoading: false\n    },\n    // 配置模块相关\n    module: {\n        rules: [ // 配置 Loader\n            {\n                test: /\\.jsx?$/, // 正则匹配命中要使用 Loader 的文件\n                include: [ // 只会命中这里面的文件\n                    path.resolve(__dirname, 'app')\n                ],\n                exclude: [ // 忽略这里面的文件\n                    path.resolve(__dirname, 'app/demo-files')\n                ],\n                use: [ // 使用哪些 Loader，有先后次序，从后向前执行\n                    'style-loader', // 直接使用 Loader 的名称\n                    {\n                        loader: 'css-loader',\n                        options: { // 向 html-loader 传一些参数\n                        }\n                    }\n                ]\n            },\n        ],\n        noParse: [ // 不用解析和处理的模块\n            /special-library\\.js$/ // 用正则匹配\n        ]\n    },\n    // 配置插件\n    plugins: [],\n    // 配置寻找模块的规则\n    resolve: {\n        modules: [ // 寻找模块的根目录，为 array 类型，默认以 node_modules 为跟目录\n            'node_modules',\n            path.resolve(__dirname, 'app')\n        ],\n        extensions: ['.js', '.json', '.jsx', '.css'], // 模块的后缀名\n        alias: { // 模块别名配置，用于映射模块\n            // 将 'module' 映射成 'new-module'，同样，'module/path/file' 也会映射成 'new-module/path/file'\n            'module': 'new-module',\n            // 使用结尾符号$后，将 'only-module' 映射成 'new-module',\n            // 但不像上面的，'module/path/file' 不会映射成 'new-module/path/file'\n            'only-module$': 'new-module'\n        },\n        alias: [ // alias 还支持使用数组来更详细地进行配置\n            {\n                name: 'module', // 老模块\n                alias: 'new-module', // 新模块\n                // 是否只映射模块，如果是 true ，则只有 'module' 会被映射；如果是 false ，则 'module/inner/path' 也会被映射\n                onlyModule: true\n            }\n        ],\n        symlinks: true, // 是否根随文件的软链接去搜寻模块的路径\n        descriptionFiles: ['package.json'], // 模块的描述文件\n        mainFields: ['main'], // 模块的描述文件里描述入口的文件的字段名\n        enforceExtension: false, // 是否强制导入语句写明文件\n    },\n    // 输出文件的性能检查配置\n    performance: {\n        hints: 'warning', // 有性能问题时输出警告\n        hints: 'error', // 有性能问题时输出错误\n        hints: false, // 关闭性能检查\n        maxAssetSize: 200000, // 最大文件的大小（单位为 bytes）\n        maxEntryPointSize: 400000, // 最大入口文件的大小（单位为 bytes）\n        assetFilter: function(assetFilename) { // 过滤要检查的文件\n            return assetFilename.endsWith('.css') || assetFilename.endsWith('.js');\n        }\n    },\n    devtool: 'source-map', // 配置 source-map 类型\n    context: __dirname, // Webpack 使用的根目录，string 类型必须是绝对路径\n    // 配置输出代码的运行环境\n    target: 'web', // 浏览器，默认\n    target: 'webworker', // WebWorker\n    target: 'node', // Node.js，使用 `require` 语句加载 Chunk 代码\n    target: 'async-node', // Node.js，异步加载 Chunk 代码\n    target: 'node-webkit', // nw.js\n    target: 'electron-main', // electron，主线程\n    target: 'electron-renderer', // electron，渲染线程\n    externals: { // 使用来自 JavaScript 运行环境提供的全局变量\n        jquery: 'jQuery'\n    },\n    stats: { // 控制台输出日志控制\n        assets: true,\n        colors: true,\n        errors: true,\n        errorDetails: true,\n        hash: true\n    },\n    devServer: { // DevServer 相关的配置\n        proxy: { // 代理到后端服务接口\n            '/api': 'http://localhost:3000'\n        },\n        contentBase: path.join(__dirname, 'public'), // 配置 DevServer HTTP 服务器的文件根目录\n        compress: true, // 是否开启 Gzip 压缩\n        historyApiFallback: true, // 是否开发 HTML5 History API 网页\n        hot: true, // 是否开启模块热替换功能\n        https: false, // 是否开启 HTTPS 模式\n        profile: true, // 是否捕捉 Webpack 构建的性能信息，用于分析是什么原因导致构建性能不佳\n        cache: false, // 是否启用缓存来提升构建速度\n        watch: true, // 是否开始\n        watchOptions: { // 监听模式选项\n            // 不监听的文件或文件夹，支持正则匹配，默认为空\n            ignored: /node_modules/,\n            // 监听到变化后，等 300ms 再执行动作，截流，防止文件更新太快导致重新编译频率太快。默认为 300ms\n            aggregateTimeout: 300,\n            // 不停的询问系统指定的文件有没有发生变化，默认每秒询问 1000 次\n            poll: 1000\n        }\n    },\n}\n\n\n","slug":"frontend/webpack","date":"2023-03-20T04:13:22.000Z","categories_index":"FRONTEND","tags_index":"build","author_index":"Kidwen"},{"id":"234ca5fd8ee7c41e1376bd4bc2b2e5c4","title":"develope with hexo","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick Start# install hexo global\nnpm i -g hexo-cli\n\n# goto workspace\nnpm i\n# or\nyarn\n\n\n\n\n\n\n\n\nremove the comments list\ngoto node-modules/hexo-theme-aurora/source/static/js/app.6d2c358d.js and delete ye.render = ie;\n\nCreate a new posthexo new 'My New Post'\n# or\nhexo n page 'My New Page'\n\nMore info: Writing\nRun serveryarn start\n\nMore info: Server\nMore info: Generating\nDeploy to remote sitesyarn deploy\n\nMore info: Deployment\n","slug":"hexo","date":"2023-03-15T08:10:22.000Z","categories_index":"ARTICLE","tags_index":"doc","author_index":"Kidwen"}]